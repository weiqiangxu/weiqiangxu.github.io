"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1702],{6262:(e,t)=>{t.A=(e,t)=>{const i=e.__vccOpts||e;for(const[e,l]of t)i[e]=l;return i}},5:(e,t,i)=>{i.r(t),i.d(t,{comp:()=>s,data:()=>n});var l=i(641);const r={},s=(0,i(6262).A)(r,[["render",function(e,t){return(0,l.uX)(),(0,l.CE)("div",null,t[0]||(t[0]=[(0,l.Fv)('<h3 id="reids的集群的脑裂是什么-双主或多主" tabindex="-1"><a class="header-anchor" href="#reids的集群的脑裂是什么-双主或多主"><span>reids的集群的脑裂是什么（双主或多主）</span></a></h3><pre><code>主从集群中，同时存在两个或多个主节点，它们都能接收写请求。\n客户端不知道应该往哪个主节点写入数据，导致数据不一致或者数据丢失。\n</code></pre><h3 id="产生的原因" tabindex="-1"><a class="header-anchor" href="#产生的原因"><span>产生的原因</span></a></h3><ol><li>网络问题：leader无法通信，哨兵将从节点升级为主节点，</li><li>哨兵配置异常。（导致将多个从节点提升为主节点）</li></ol><h3 id="如何避免脑裂" tabindex="-1"><a class="header-anchor" href="#如何避免脑裂"><span>如何避免脑裂</span></a></h3><ol><li>配置合理的哨兵参数： min-slaves-to-write：这个配置项设置了主库能进行数据同步的最少从库数量，即至少要保证N个从库能进行数据同步； min-slaves-max-lag：这个配置项设置了主从库间进行数据复制时，从库给主库发送 ACK 消息的最大延迟（以秒为单位）</li></ol><blockquote><p>主库连接的从库中至少有 N 个从库，数据复制时 ACK 消息延迟不能超过 T 秒，否则，主库就不会再接收客户端的请求了。</p></blockquote><blockquote><p>保证了有N个从库并且T秒内从库回应主库，才会写数据</p></blockquote><ol><li>Redis Cluster模式可以避免脑裂的发生：Redis Cluster模式：Redis Cluster模式是一个去中心化的模式，没有leader节点，因此不会发生脑裂</li></ol><p><a href="https://xiaolincoding.com/redis/cluster/master_slave_replication.html#%E4%B8%BB%E4%BB%8E%E5%88%87%E6%8D%A2%E5%A6%82%E4%BD%95%E5%87%8F%E5%B0%91%E6%95%B0%E6%8D%AE%E4%B8%A2%E5%A4%B1" target="_blank" rel="noopener noreferrer">给你详细讲讲Redis主从脑裂如何导致数据丢失的 - 根本原因是从节点第一次会全量复制主节点的数据</a></p>',10)]))}]]),n=JSON.parse('{"path":"/posts/redis/Redis%E4%B8%BB%E4%BB%8E%E8%84%91%E8%A3%82%E9%97%AE%E9%A2%98%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html","title":"","lang":"zh-CN","frontmatter":{"hide":true,"description":"reids的集群的脑裂是什么（双主或多主） 产生的原因 网络问题：leader无法通信，哨兵将从节点升级为主节点， 哨兵配置异常。（导致将多个从节点提升为主节点） 如何避免脑裂 配置合理的哨兵参数： min-slaves-to-write：这个配置项设置了主库能进行数据同步的最少从库数量，即至少要保证N个从库能进行数据同步； min-slaves-ma...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://weiqiangxu.github.io/posts/redis/Redis%E4%B8%BB%E4%BB%8E%E8%84%91%E8%A3%82%E9%97%AE%E9%A2%98%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html"}],["meta",{"property":"og:site_name","content":"笔记本"}],["meta",{"property":"og:description","content":"reids的集群的脑裂是什么（双主或多主） 产生的原因 网络问题：leader无法通信，哨兵将从节点升级为主节点， 哨兵配置异常。（导致将多个从节点提升为主节点） 如何避免脑裂 配置合理的哨兵参数： min-slaves-to-write：这个配置项设置了主库能进行数据同步的最少从库数量，即至少要保证N个从库能进行数据同步； min-slaves-ma..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuweiqiang\\",\\"url\\":\\"https://weiqiangxu.github.io\\"}]}"]]},"headers":[{"level":3,"title":"reids的集群的脑裂是什么（双主或多主）","slug":"reids的集群的脑裂是什么-双主或多主","link":"#reids的集群的脑裂是什么-双主或多主","children":[]},{"level":3,"title":"产生的原因","slug":"产生的原因","link":"#产生的原因","children":[]},{"level":3,"title":"如何避免脑裂","slug":"如何避免脑裂","link":"#如何避免脑裂","children":[]}],"readingTime":{"minutes":1.41,"words":423},"filePathRelative":"posts/redis/Redis主从脑裂问题和解决方案.md","excerpt":"<h3>reids的集群的脑裂是什么（双主或多主）</h3>\\n<pre><code>主从集群中，同时存在两个或多个主节点，它们都能接收写请求。\\n客户端不知道应该往哪个主节点写入数据，导致数据不一致或者数据丢失。\\n</code></pre>\\n<h3>产生的原因</h3>\\n<ol>\\n<li>网络问题：leader无法通信，哨兵将从节点升级为主节点，</li>\\n<li>哨兵配置异常。（导致将多个从节点提升为主节点）</li>\\n</ol>\\n<h3>如何避免脑裂</h3>\\n<ol>\\n<li>配置合理的哨兵参数：\\nmin-slaves-to-write：这个配置项设置了主库能进行数据同步的最少从库数量，即至少要保证N个从库能进行数据同步；\\nmin-slaves-max-lag：这个配置项设置了主从库间进行数据复制时，从库给主库发送 ACK 消息的最大延迟（以秒为单位）</li>\\n</ol>","autoDesc":true}')}}]);