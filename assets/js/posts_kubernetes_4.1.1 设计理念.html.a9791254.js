"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9651],{6262:(e,a)=>{a.A=(e,a)=>{const s=e.__vccOpts||e;for(const[e,n]of a)s[e]=n;return s}},8953:(e,a,s)=>{s.r(a),s.d(a,{comp:()=>i,data:()=>l});var n=s(641);const t={},i=(0,s(6262).A)(t,[["render",function(e,a){return(0,n.uX)(),(0,n.CE)("div",null,a[0]||(a[0]=[(0,n.Fv)('<h1 id="设计理念" tabindex="-1"><a class="header-anchor" href="#设计理念"><span>设计理念</span></a></h1><h3 id="kubernetes-的核心技术概念和-api-对象" tabindex="-1"><a class="header-anchor" href="#kubernetes-的核心技术概念和-api-对象"><span>Kubernetes 的核心技术概念和 API 对象</span></a></h3><ol><li><p>Api对象是管理操作单元 ， 每个API对象有3大类属性： 元数据 metadata、规范 spec 和状态 status</p></li><li><p>每个对象都至少有 3 个元数据 (标识对象 , 辅助的有 labels\\env) ：namespace，name 和 uid</p></li><li><p>Kubernetes 中所有的配置都是通过 API 对象的 spec 去设置的 ， 很明显 spec 就是对象内的一些具体描述比如 image xxx</p></li></ol><h3 id="pod" tabindex="-1"><a class="header-anchor" href="#pod"><span>Pod</span></a></h3><ol><li><p>k8s集群的最小单元</p></li><li><p>支持多个容器，共享网络地址和文件系统</p></li></ol><h3 id="副本控制器-replication-controller-rc" tabindex="-1"><a class="header-anchor" href="#副本控制器-replication-controller-rc"><span>副本控制器（Replication Controller，RC）</span></a></h3><h3 id="副本集-replica-set-rs-新一代-rc" tabindex="-1"><a class="header-anchor" href="#副本集-replica-set-rs-新一代-rc"><span>副本集（Replica Set，RS）(新一代 RC)</span></a></h3><h3 id="部署-deployment" tabindex="-1"><a class="header-anchor" href="#部署-deployment"><span>部署（Deployment）</span></a></h3><h3 id="服务-service" tabindex="-1"><a class="header-anchor" href="#服务-service"><span>服务（Service）</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>pod.cluster_ip &amp;&amp; pod.cluster_port 销毁重建后动态生成会变，而service提供对这些Pod的服务发现和负载均衡</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="任务-job" tabindex="-1"><a class="header-anchor" href="#任务-job"><span>任务（Job）</span></a></h3><h3 id="后台支撑服务集-daemonset" tabindex="-1"><a class="header-anchor" href="#后台支撑服务集-daemonset"><span>后台支撑服务集（DaemonSet）</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>关注点在 Kubernetes 集群中的节点</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>保证每个节点上都有一个此类 Pod 运行</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="有状态服务集-statefulset" tabindex="-1"><a class="header-anchor" href="#有状态服务集-statefulset"><span>有状态服务集（StatefulSet）</span></a></h3><h3 id="存储卷-volume" tabindex="-1"><a class="header-anchor" href="#存储卷-volume"><span>存储卷（Volume）</span></a></h3><h3 id="持久存储卷-persistent-volume-pv-和持久存储卷声明-persistent-volume-claim-pvc" tabindex="-1"><a class="header-anchor" href="#持久存储卷-persistent-volume-pv-和持久存储卷声明-persistent-volume-claim-pvc"><span>持久存储卷（Persistent Volume，PV）和持久存储卷声明（Persistent Volume Claim，PVC）</span></a></h3><h3 id="节点-node" tabindex="-1"><a class="header-anchor" href="#节点-node"><span>节点（Node）</span></a></h3><h3 id="密钥对象-secret" tabindex="-1"><a class="header-anchor" href="#密钥对象-secret"><span>密钥对象（Secret）</span></a></h3><h3 id="用户帐户-user-account-和服务帐户-service-account" tabindex="-1"><a class="header-anchor" href="#用户帐户-user-account-和服务帐户-service-account"><span>用户帐户（User Account）和服务帐户（Service Account）</span></a></h3><h3 id="命名空间-namespace" tabindex="-1"><a class="header-anchor" href="#命名空间-namespace"><span>命名空间（Namespace）</span></a></h3>',20)]))}]]),l=JSON.parse('{"path":"/posts/kubernetes/4.1.1%20%E8%AE%BE%E8%AE%A1%E7%90%86%E5%BF%B5.html","title":"设计理念","lang":"zh-CN","frontmatter":{"hide":true,"description":"设计理念 Kubernetes 的核心技术概念和 API 对象 Api对象是管理操作单元 ， 每个API对象有3大类属性： 元数据 metadata、规范 spec 和状态 status 每个对象都至少有 3 个元数据 (标识对象 , 辅助的有 labels\\\\env) ：namespace，name 和 uid Kubernetes 中所有的配置都是通...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://weiqiangxu.github.io/posts/kubernetes/4.1.1%20%E8%AE%BE%E8%AE%A1%E7%90%86%E5%BF%B5.html"}],["meta",{"property":"og:site_name","content":"QuickStart程序员"}],["meta",{"property":"og:title","content":"设计理念"}],["meta",{"property":"og:description","content":"设计理念 Kubernetes 的核心技术概念和 API 对象 Api对象是管理操作单元 ， 每个API对象有3大类属性： 元数据 metadata、规范 spec 和状态 status 每个对象都至少有 3 个元数据 (标识对象 , 辅助的有 labels\\\\env) ：namespace，name 和 uid Kubernetes 中所有的配置都是通..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"设计理念\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuweiqiang\\",\\"url\\":\\"https://weiqiangxu.github.io\\"}]}"]]},"headers":[{"level":3,"title":"Kubernetes 的核心技术概念和 API 对象","slug":"kubernetes-的核心技术概念和-api-对象","link":"#kubernetes-的核心技术概念和-api-对象","children":[]},{"level":3,"title":"Pod","slug":"pod","link":"#pod","children":[]},{"level":3,"title":"副本控制器（Replication Controller，RC）","slug":"副本控制器-replication-controller-rc","link":"#副本控制器-replication-controller-rc","children":[]},{"level":3,"title":"副本集（Replica Set，RS）(新一代 RC)","slug":"副本集-replica-set-rs-新一代-rc","link":"#副本集-replica-set-rs-新一代-rc","children":[]},{"level":3,"title":"部署（Deployment）","slug":"部署-deployment","link":"#部署-deployment","children":[]},{"level":3,"title":"服务（Service）","slug":"服务-service","link":"#服务-service","children":[]},{"level":3,"title":"任务（Job）","slug":"任务-job","link":"#任务-job","children":[]},{"level":3,"title":"后台支撑服务集（DaemonSet）","slug":"后台支撑服务集-daemonset","link":"#后台支撑服务集-daemonset","children":[]},{"level":3,"title":"有状态服务集（StatefulSet）","slug":"有状态服务集-statefulset","link":"#有状态服务集-statefulset","children":[]},{"level":3,"title":"存储卷（Volume）","slug":"存储卷-volume","link":"#存储卷-volume","children":[]},{"level":3,"title":"持久存储卷（Persistent Volume，PV）和持久存储卷声明（Persistent Volume Claim，PVC）","slug":"持久存储卷-persistent-volume-pv-和持久存储卷声明-persistent-volume-claim-pvc","link":"#持久存储卷-persistent-volume-pv-和持久存储卷声明-persistent-volume-claim-pvc","children":[]},{"level":3,"title":"节点（Node）","slug":"节点-node","link":"#节点-node","children":[]},{"level":3,"title":"密钥对象（Secret）","slug":"密钥对象-secret","link":"#密钥对象-secret","children":[]},{"level":3,"title":"用户帐户（User Account）和服务帐户（Service Account）","slug":"用户帐户-user-account-和服务帐户-service-account","link":"#用户帐户-user-account-和服务帐户-service-account","children":[]},{"level":3,"title":"命名空间（Namespace）","slug":"命名空间-namespace","link":"#命名空间-namespace","children":[]}],"readingTime":{"minutes":0.99,"words":298},"filePathRelative":"posts/kubernetes/4.1.1 设计理念.md","excerpt":"\\n<h3>Kubernetes 的核心技术概念和 API 对象</h3>\\n<ol>\\n<li>\\n<p>Api对象是管理操作单元 ， 每个API对象有3大类属性： 元数据 metadata、规范 spec 和状态 status</p>\\n</li>\\n<li>\\n<p>每个对象都至少有 3 个元数据 (标识对象 , 辅助的有 labels\\\\env) ：namespace，name 和 uid</p>\\n</li>\\n<li>\\n<p>Kubernetes 中所有的配置都是通过 API 对象的 spec 去设置的 ， 很明显 spec 就是对象内的一些具体描述比如 image xxx</p>\\n</li>\\n</ol>","autoDesc":true}')}}]);