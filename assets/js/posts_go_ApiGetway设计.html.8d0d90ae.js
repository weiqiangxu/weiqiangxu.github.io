"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6459],{6262:(e,a)=>{a.A=(e,a)=>{const s=e.__vccOpts||e;for(const[e,i]of a)s[e]=i;return s}},9591:(e,a,s)=>{s.r(a),s.d(a,{comp:()=>t,data:()=>l});var i=s(641);const n={},t=(0,s(6262).A)(n,[["render",function(e,a){return(0,i.uX)(),(0,i.CE)("div",null,a[0]||(a[0]=[(0,i.Fv)('<h1 id="api-getway" tabindex="-1"><a class="header-anchor" href="#api-getway"><span>API_Getway</span></a></h1><ol><li>API Gateway 演进</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>背景: 微服务和客户端直接通信</span></span>\n<span class="line"><span>1. 强耦合（各个微服务变更，都需要知会前端）</span></span>\n<span class="line"><span>2. 多个微服务之前协议需要统一（具体指的是响应值错误码数据结构等）</span></span>\n<span class="line"><span>3. 不利于微服务局部弹性扩容</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>API Gateway 可以做到的事情</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>隔离 - 屏蔽内部细节和外部客户端</span></span>\n<span class="line"><span>超时控制 - 控制响应最大时长</span></span>\n<span class="line"><span>重试 - 屏蔽客户端当内部异常时自动重试</span></span>\n<span class="line"><span>限流</span></span>\n<span class="line"><span>过载保护</span></span>\n<span class="line"><span>熔断</span></span>\n<span class="line"><span>降级</span></span>\n<span class="line"><span>负载均衡</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="推荐解决方案" tabindex="-1"><a class="header-anchor" href="#推荐解决方案"><span>推荐解决方案</span></a></h3><p><a href="https://apisix.apache.org/" target="_blank" rel="noopener noreferrer">https://apisix.apache.org/</a></p><blockquote><p>Apache APISIX 基于 NGINX 和 etcd。与传统的 API Gateway 相比，APISIX 具有动态路由和热加载插件等特性</p></blockquote><hr><h1 id="api-管理" tabindex="-1"><a class="header-anchor" href="#api-管理"><span>API 管理</span></a></h1><p><a href="https://linter.aip.dev/" target="_blank" rel="noopener noreferrer">https://linter.aip.dev/</a></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>proto 代码独立仓库部署</span></span>\n<span class="line"><span>1. 各业务proto文件独立维护</span></span>\n<span class="line"><span>2. 统一仓库存储proto文件，独立git库 (也是目前自己在用的一个)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h1 id="api-设计" tabindex="-1"><a class="header-anchor" href="#api-设计"><span>API 设计</span></a></h1><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>gRPC使用proto作为描述文件</span></span>\n<span class="line"><span>业务域（Business Domain）</span></span>\n<span class="line"><span>资源路径（Resource Path）  = 业务域 + 资源相对路径</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><a href="https://github.com/go-kratos/kratos/blob/main/README_zh.md" target="_blank" rel="noopener noreferrer">轻量级微服务框架 go-kratos/kratos</a></li><li><a href="https://mp.weixin.qq.com/s/cBXZjg_R8MLFDJyFtpjVVQ" target="_blank" rel="noopener noreferrer">proto文件放哪里合适</a></li><li><a href="https://www.bookstack.cn/read/API-design-guide/API-design-guide-README.md" target="_blank" rel="noopener noreferrer">google API设计指南中文版</a></li><li><a href="https://go-kratos.dev/docs/guide/api-protobuf/" target="_blank" rel="noopener noreferrer">protobuf规范</a></li></ul>',16)]))}]]),l=JSON.parse('{"path":"/posts/go/ApiGetway%E8%AE%BE%E8%AE%A1.html","title":"ApiGatway设计","lang":"zh-CN","frontmatter":{"title":"ApiGatway设计","index_img":"/images/bg/文章通用.png","tags":["golang"],"categories":["golang"],"date":"2023-04-11T09:40:12.000Z","excerpt":"理解golang的web服务之中api gatway扮演的角色，它的设计和应用","hide":true,"description":"API_Getway API Gateway 演进 API Gateway 可以做到的事情 推荐解决方案 https://apisix.apache.org/ Apache APISIX 基于 NGINX 和 etcd。与传统的 API Gateway 相比，APISIX 具有动态路由和热加载插件等特性 API 管理 https://linter.ai...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://weiqiangxu.github.io/posts/go/ApiGetway%E8%AE%BE%E8%AE%A1.html"}],["meta",{"property":"og:site_name","content":"笔记本"}],["meta",{"property":"og:title","content":"ApiGatway设计"}],["meta",{"property":"og:description","content":"API_Getway API Gateway 演进 API Gateway 可以做到的事情 推荐解决方案 https://apisix.apache.org/ Apache APISIX 基于 NGINX 和 etcd。与传统的 API Gateway 相比，APISIX 具有动态路由和热加载插件等特性 API 管理 https://linter.ai..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"golang"}],["meta",{"property":"article:published_time","content":"2023-04-11T09:40:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ApiGatway设计\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-04-11T09:40:12.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuweiqiang\\",\\"url\\":\\"https://weiqiangxu.github.io\\"}]}"]]},"headers":[{"level":3,"title":"推荐解决方案","slug":"推荐解决方案","link":"#推荐解决方案","children":[]}],"readingTime":{"minutes":1.23,"words":369},"filePathRelative":"posts/go/ApiGetway设计.md","localizedDate":"2023年4月11日","autoDesc":true}')}}]);