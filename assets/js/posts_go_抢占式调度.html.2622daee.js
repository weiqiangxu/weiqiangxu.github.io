"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5279],{6262:(e,n)=>{n.A=(e,n)=>{const i=e.__vccOpts||e;for(const[e,s]of n)i[e]=s;return i}},307:(e,n,i)=>{i.r(n),i.d(n,{comp:()=>t,data:()=>l});var s=i(641);const a={},t=(0,i(6262).A)(a,[["render",function(e,n){return(0,s.uX)(),(0,s.CE)("div",null,n[0]||(n[0]=[(0,s.Fv)('<h3 id="runtime-对-g-进行异步抢占" tabindex="-1"><a class="header-anchor" href="#runtime-对-g-进行异步抢占"><span>runtime 对 G 进行异步抢占</span></a></h3><blockquote><p>go 1.13 \\ go 1.14</p></blockquote><h3 id="linux上真正的抢占式调度是基于信号来实现的-异步抢占" tabindex="-1"><a class="header-anchor" href="#linux上真正的抢占式调度是基于信号来实现的-异步抢占"><span>Linux上真正的抢占式调度是基于信号来实现的 &quot;异步抢占&quot;</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>调用操作系统中信号相关的系统调用</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>发送指定信号给目标线程</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>线程接收到信号之后</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="https://www.bilibili.com/video/BV1hv411x7we" target="_blank" rel="noopener noreferrer">Golang合集</a></p><p><a href="https://www.bilibili.com/video/BV1hv411x7we" target="_blank" rel="noopener noreferrer">Golang合集</a></p>',6)]))}]]),l=JSON.parse('{"path":"/posts/go/%E6%8A%A2%E5%8D%A0%E5%BC%8F%E8%B0%83%E5%BA%A6.html","title":"抢占式调度","lang":"zh-CN","frontmatter":{"title":"抢占式调度","description":"runtime 对 G 进行异步抢占 go 1.13 \\\\ go 1.14 Linux上真正的抢占式调度是基于信号来实现的 \\"异步抢占\\" Golang合集 Golang合集","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://weiqiangxu.github.io/posts/go/%E6%8A%A2%E5%8D%A0%E5%BC%8F%E8%B0%83%E5%BA%A6.html"}],["meta",{"property":"og:site_name","content":"笔记本"}],["meta",{"property":"og:title","content":"抢占式调度"}],["meta",{"property":"og:description","content":"runtime 对 G 进行异步抢占 go 1.13 \\\\ go 1.14 Linux上真正的抢占式调度是基于信号来实现的 \\"异步抢占\\" Golang合集 Golang合集"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"抢占式调度\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuweiqiang\\",\\"url\\":\\"https://weiqiangxu.github.io\\"}]}"]]},"headers":[{"level":3,"title":"runtime 对 G 进行异步抢占","slug":"runtime-对-g-进行异步抢占","link":"#runtime-对-g-进行异步抢占","children":[]},{"level":3,"title":"Linux上真正的抢占式调度是基于信号来实现的 \\"异步抢占\\"","slug":"linux上真正的抢占式调度是基于信号来实现的-异步抢占","link":"#linux上真正的抢占式调度是基于信号来实现的-异步抢占","children":[]}],"readingTime":{"minutes":0.29,"words":88},"filePathRelative":"posts/go/抢占式调度.md","excerpt":"<h3>runtime 对 G 进行异步抢占</h3>\\n<blockquote>\\n<p>go 1.13 \\\\ go 1.14</p>\\n</blockquote>\\n<h3>Linux上真正的抢占式调度是基于信号来实现的 \\"异步抢占\\"</h3>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>调用操作系统中信号相关的系统调用</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>发送指定信号给目标线程</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>线程接收到信号之后</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}')}}]);