"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5929],{6262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}},6156:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>t,data:()=>l});var e=a(641);const i={},t=(0,a(6262).A)(i,[["render",function(n,s){return(0,e.uX)(),(0,e.CE)("div",null,s[0]||(s[0]=[(0,e.Fv)('<ol><li>code</li></ol><div class="language-golang line-numbers-mode" data-highlighter="shiki" data-ext="golang" data-title="golang" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>type User struct {</span></span>\n<span class="line"><span>\tName string `json:&quot;name&quot;`</span></span>\n<span class="line"><span>}</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>func GetUser() ([]*User, []User) {</span></span>\n<span class="line"><span>\tvar list []User</span></span>\n<span class="line"><span>\tlist = append(list, User{</span></span>\n<span class="line"><span>\t\tName: &quot;1&quot;,</span></span>\n<span class="line"><span>\t})</span></span>\n<span class="line"><span>\tlist = append(list, User{</span></span>\n<span class="line"><span>\t\tName: &quot;2&quot;,</span></span>\n<span class="line"><span>\t})</span></span>\n<span class="line"><span>\tlist = append(list, User{</span></span>\n<span class="line"><span>\t\tName: &quot;3&quot;,</span></span>\n<span class="line"><span>\t})</span></span>\n<span class="line"><span>\tvar z []*User</span></span>\n<span class="line"><span>\tvar y []User</span></span>\n<span class="line"><span>\tfor _, v := range list {</span></span>\n<span class="line"><span>\t\tif v.Name == &quot;1&quot; {</span></span>\n<span class="line"><span>\t\t\tz = append(z, &amp;v) // $v 的地址在一次 range 之中唯一不变的</span></span>\n<span class="line"><span>\t\t\ty = append(y, v)</span></span>\n<span class="line"><span>\t\t}</span></span>\n<span class="line"><span>\t}</span></span>\n<span class="line"><span>\treturn z, y</span></span>\n<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>unit test</li></ol><div class="language-golang line-numbers-mode" data-highlighter="shiki" data-ext="golang" data-title="golang" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>func TestGetUser(t *testing.T) {</span></span>\n<span class="line"><span>\ttests := []struct {</span></span>\n<span class="line"><span>\t\tname  string</span></span>\n<span class="line"><span>\t\twant  []*User</span></span>\n<span class="line"><span>\t\twant1 []User</span></span>\n<span class="line"><span>\t}{</span></span>\n<span class="line"><span>\t\t{</span></span>\n<span class="line"><span>\t\t\tname:  &quot;&quot;,</span></span>\n<span class="line"><span>\t\t\twant:  nil,</span></span>\n<span class="line"><span>\t\t\twant1: nil,</span></span>\n<span class="line"><span>\t\t},</span></span>\n<span class="line"><span>\t}</span></span>\n<span class="line"><span>\tfor _, tt := range tests {</span></span>\n<span class="line"><span>\t\tt.Run(tt.name, func(t *testing.T) {</span></span>\n<span class="line"><span>\t\t\tgot, got1 := GetUser()</span></span>\n<span class="line"><span>\t\t\tfor _, v := range got {</span></span>\n<span class="line"><span>\t\t\t\tt.Logf(&quot;got=%+v&quot;, v)</span></span>\n<span class="line"><span>\t\t\t}</span></span>\n<span class="line"><span>\t\t\tfor _, v := range got1 {</span></span>\n<span class="line"><span>\t\t\t\tt.Logf(&quot;got1=%+v&quot;, v)</span></span>\n<span class="line"><span>\t\t\t}</span></span>\n<span class="line"><span>\t\t})</span></span>\n<span class="line"><span>\t}</span></span>\n<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',4)]))}]]),l=JSON.parse('{"path":"/posts/go/%E4%BD%BF%E7%94%A8range%E5%BF%85%E6%87%82%E7%9A%84%E7%82%B9.html","title":"使用range必懂的点","lang":"zh-CN","frontmatter":{"title":"使用range必懂的点","index_img":"/images/bg/文章通用.png","tags":["golang"],"categories":["golang"],"date":"2021-04-11T09:40:12.000Z","excerpt":"使用range时候容易遗漏的点，就是range list之中的item地址是不可用的","hide":false,"description":"code unit test","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://weiqiangxu.github.io/posts/go/%E4%BD%BF%E7%94%A8range%E5%BF%85%E6%87%82%E7%9A%84%E7%82%B9.html"}],["meta",{"property":"og:site_name","content":"QuickStart程序员"}],["meta",{"property":"og:title","content":"使用range必懂的点"}],["meta",{"property":"og:description","content":"code unit test"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"golang"}],["meta",{"property":"article:published_time","content":"2021-04-11T09:40:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"使用range必懂的点\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-04-11T09:40:12.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuweiqiang\\",\\"url\\":\\"https://weiqiangxu.github.io\\"}]}"]]},"headers":[],"readingTime":{"minutes":0.61,"words":183},"filePathRelative":"posts/go/使用range必懂的点.md","localizedDate":"2021年4月11日","autoDesc":true}')}}]);