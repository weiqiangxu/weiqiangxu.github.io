"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5534],{6262:(s,i)=>{i.A=(s,i)=>{const n=s.__vccOpts||s;for(const[s,a]of i)n[s]=a;return n}},9647:(s,i,n)=>{n.r(i),n.d(i,{comp:()=>l,data:()=>t});var a=n(641);const e={},l=(0,n(6262).A)(e,[["render",function(s,i){return(0,a.uX)(),(0,a.CE)("div",null,i[0]||(i[0]=[(0,a.Fv)('<blockquote><p>通过Nginx使用不同的域名指向不同的服务</p></blockquote><h3 id="_1-配置和启动nginx" tabindex="-1"><a class="header-anchor" href="#_1-配置和启动nginx"><span>1.配置和启动Nginx</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> network</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> create</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx-test</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 注意不同版本docker可能指定网络的方式不太一样</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --network</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx-test</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -itd</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 80:80</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./nginx.conf:/etc/nginx/conf.d/proxy.conf</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  nginx:1.25.1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-nginx.conf line-numbers-mode" data-highlighter="shiki" data-ext="nginx.conf" data-title="nginx.conf" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>client_body_buffer_size 2048m;   # 设置客户端请求的缓冲区大小</span></span>\n<span class="line"><span>client_header_buffer_size 2048m; # 设置客户端请求头部的缓冲区大小</span></span>\n<span class="line"><span>client_max_body_size 2048m;      # 设置客户端请求的最大缓冲区大小</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>server {</span></span>\n<span class="line"><span>    listen 80;</span></span>\n<span class="line"><span>    server_name a.com;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>    location / {</span></span>\n<span class="line"><span>        proxy_pass http://127.0.0.1:5000;</span></span>\n<span class="line"><span>        proxy_set_header Host $host;</span></span>\n<span class="line"><span>        proxy_set_header X-Real-IP $remote_addr;</span></span>\n<span class="line"><span>        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span></span>\n<span class="line"><span>        proxy_set_header X-Forwarded-Proto $scheme;</span></span>\n<span class="line"><span>    }</span></span>\n<span class="line"><span>}</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>server {</span></span>\n<span class="line"><span>    listen 80;</span></span>\n<span class="line"><span>    server_name b.com;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>    location / {</span></span>\n<span class="line"><span>        proxy_pass http://gin:8080;</span></span>\n<span class="line"><span>        proxy_set_header Host $host;</span></span>\n<span class="line"><span>        proxy_set_header X-Real-IP $remote_addr;</span></span>\n<span class="line"><span>        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span></span>\n<span class="line"><span>        proxy_set_header X-Forwarded-Proto $scheme;</span></span>\n<span class="line"><span>    }</span></span>\n<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-启动服务监听8080端口" tabindex="-1"><a class="header-anchor" href="#_2-启动服务监听8080端口"><span>2.启动服务监听8080端口</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 服务默认端口是5678</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --network</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx-test</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -itd</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --network-alias</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gin</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  435861851/gin:v0.0.1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意: 此时访问在nginx内部访问gin:8080是输出Hello Gin</p></blockquote><h3 id="_3-配置域名-etc-host" tabindex="-1"><a class="header-anchor" href="#_3-配置域名-etc-host"><span>3.配置域名/etc/host</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">127.0.0.1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> b.com</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_4-使用ip访问" tabindex="-1"><a class="header-anchor" href="#_4-使用ip访问"><span>4.使用IP访问</span></a></h3><p><a href="http://b.com" target="_blank" rel="noopener noreferrer">http://b.com</a></p><blockquote><p>输出 <code>{&quot;message&quot;:&quot;Hello Gin!&quot;}</code></p></blockquote>',13)]))}]]),t=JSON.parse('{"path":"/posts/nginx/%E5%9F%9F%E5%90%8D%E6%8C%87%E5%90%91%E9%85%8D%E7%BD%AE.html","title":"域名指向配置","lang":"zh-CN","frontmatter":{"title":"域名指向配置","tags":["Nginx"],"categories":["Nginx"],"description":"通过Nginx使用不同的域名指向不同的服务 1.配置和启动Nginx 2.启动服务监听8080端口 注意: 此时访问在nginx内部访问gin:8080是输出Hello Gin 3.配置域名/etc/host 4.使用IP访问 http://b.com 输出 {\\"message\\":\\"Hello Gin!\\"}","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://weiqiangxu.github.io/posts/nginx/%E5%9F%9F%E5%90%8D%E6%8C%87%E5%90%91%E9%85%8D%E7%BD%AE.html"}],["meta",{"property":"og:site_name","content":"QuickStart程序员"}],["meta",{"property":"og:title","content":"域名指向配置"}],["meta",{"property":"og:description","content":"通过Nginx使用不同的域名指向不同的服务 1.配置和启动Nginx 2.启动服务监听8080端口 注意: 此时访问在nginx内部访问gin:8080是输出Hello Gin 3.配置域名/etc/host 4.使用IP访问 http://b.com 输出 {\\"message\\":\\"Hello Gin!\\"}"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"Nginx"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"域名指向配置\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuweiqiang\\",\\"url\\":\\"https://weiqiangxu.github.io\\"}]}"]]},"headers":[{"level":3,"title":"1.配置和启动Nginx","slug":"_1-配置和启动nginx","link":"#_1-配置和启动nginx","children":[]},{"level":3,"title":"2.启动服务监听8080端口","slug":"_2-启动服务监听8080端口","link":"#_2-启动服务监听8080端口","children":[]},{"level":3,"title":"3.配置域名/etc/host","slug":"_3-配置域名-etc-host","link":"#_3-配置域名-etc-host","children":[]},{"level":3,"title":"4.使用IP访问","slug":"_4-使用ip访问","link":"#_4-使用ip访问","children":[]}],"readingTime":{"minutes":0.86,"words":259},"filePathRelative":"posts/nginx/域名指向配置.md","excerpt":"<blockquote>\\n<p>通过Nginx使用不同的域名指向不同的服务</p>\\n</blockquote>\\n<h3>1.配置和启动Nginx</h3>\\n<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"bash\\" data-title=\\"bash\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">docker</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> network</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> create</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> nginx-test</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}')}}]);