"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4285],{6262:(i,s)=>{s.A=(i,s)=>{const a=i.__vccOpts||i;for(const[i,n]of s)a[i]=n;return a}},4062:(i,s,a)=>{a.r(s),a.d(s,{comp:()=>h,data:()=>t});var n=a(641);const l={},h=(0,a(6262).A)(l,[["render",function(i,s){return(0,n.uX)(),(0,n.CE)("div",null,s[0]||(s[0]=[(0,n.Fv)('<blockquote><p>使用docker创建无网络的容器，然后使用CNI插件手动分配网卡和网桥等</p></blockquote><h3 id="_1-安装docker和cni-plugins" tabindex="-1"><a class="header-anchor" href="#_1-安装docker和cni-plugins"><span>1.安装docker和cni plugins</span></a></h3><ul><li>docker</li><li>cni plugins</li></ul><p><a href="https://github.com/containernetworking/cni/blob/main/README.md" target="_blank" rel="noopener noreferrer">本文参考手册CNI README.md</a></p><h3 id="_2-脚本创建网络命名空间并分配网络quickstart" tabindex="-1"><a class="header-anchor" href="#_2-脚本创建网络命名空间并分配网络quickstart"><span>2.脚本创建网络命名空间并分配网络quickStart</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 宿主机上验证CNI环境已经装好</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 下面这个脚本执行后会创建net namespace并且分配网络</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 然后打印出网卡信息</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CNI_PATH=/opt/cni/bin</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /home</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clone</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://github.com/containernetworking/cni.git</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CNI_PATH=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$CNI_PATH</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /home/cni/scripts/priv-net-run.sh</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ifconfig</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-对docker创建好的容器分配网络并查看网络配置docker" tabindex="-1"><a class="header-anchor" href="#_3-对docker创建好的容器分配网络并查看网络配置docker"><span>3.对docker创建好的容器分配网络并查看网络配置docker</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> save</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -o</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> busybox.tar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> busybox:latest</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> load</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> busybox.tar</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 下面这个脚本会给容器分配网络并且打印出容器内网卡信息</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CNI_PATH=/opt/cni/bi</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> echo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $CNI_PATH</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /home/cni/scripts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CNI_PATH</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$CNI_PATH</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> ./docker-run.sh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --rm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> busybox:latest</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ifconfig</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-cni在容器网络分配时候相关配置以及操作描述" tabindex="-1"><a class="header-anchor" href="#_4-cni在容器网络分配时候相关配置以及操作描述"><span>4.CNI在容器网络分配时候相关配置以及操作描述</span></a></h3><h5 id="_1-相关博客" tabindex="-1"><a class="header-anchor" href="#_1-相关博客"><span>1.相关博客</span></a></h5><p><a href="http://www.dasblinkenlichten.com/understanding-cni-container-networking-interface/" target="_blank" rel="noopener noreferrer">dasblinkenlichten.com/深入理解CNI</a></p><h5 id="_2-cni配置展示" tabindex="-1"><a class="header-anchor" href="#_2-cni配置展示"><span>2.cni配置展示</span></a></h5><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /opt/cni/bin</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">mybridge.conf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EOF</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">{</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;cniVersion&quot;: &quot;0.2.0&quot;,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;name&quot;: &quot;mybridge&quot;,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;type&quot;: &quot;bridge&quot;,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;bridge&quot;: &quot;cni_bridge0&quot;,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;isGateway&quot;: true,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;ipMasq&quot;: true,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;ipam&quot;: {</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;type&quot;: &quot;host-local&quot;,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;subnet&quot;: &quot;10.15.20.0/24&quot;,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;routes&quot;: [</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            { &quot;dst&quot;: &quot;0.0.0.0/0&quot; },</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            { &quot;dst&quot;: &quot;1.1.1.1/32&quot;, &quot;gw&quot;:&quot;10.15.20.1&quot;}</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        ]</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    }</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-手动创建网络命名空间然后使用cni手动给该命名空间分配网卡" tabindex="-1"><a class="header-anchor" href="#_2-手动创建网络命名空间然后使用cni手动给该命名空间分配网卡"><span>2.手动创建网络命名空间然后使用CNI手动给该命名空间分配网卡</span></a></h5><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> netns</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1234567890</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CNI_COMMAND=ADD</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CNI_CONTAINERID=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1234567890</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CNI_NETNS=/var/run/netns/1234567890</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CNI_IFNAME=eth12</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CNI_PATH=`</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">pwd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> ./bridge</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">mybridge.conf</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看我们的主机 iptables 规则，我们将看到伪装和接受规则.</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> iptables-save</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mybridge</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 通常情况下，容器运行时会创建netns，这里我们手动创建</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> netns</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1234567890</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ifconfig</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#　设备eth12的IP地址配置为10.15.20.2，子网掩码为255.255.255.0（/24表示子网掩码），并将该设备的网络范围设置为本地链接（scope link）</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> netns</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1234567890</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> route</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 命名空间有一个名为“eth12”的接口，IP 地址为 10.15.20.2/24</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># IP 地址对应的ipam的子网段地址</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">eth12:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> flags=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4163</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">UP,BROADCAST,RUNNING,MULTICAS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">T&gt;  </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">mtu</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1500</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        inet</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10.15.20.2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  netmask</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 255.255.255.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  broadcast</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10.15.20.255</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        inet6</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> fe80::44f2:48ff:feb6:b364</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  prefixlen</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 64</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  scopeid</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0x20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">lin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">k&gt;</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        ether</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 46:f2:48:b6:b3:64</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  txqueuelen</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  (Ethernet)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        RX</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> packets</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 67</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  bytes</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 13007</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (12.7 </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">KiB</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        RX</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> errors</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  dropped</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  overruns</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  frame</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        TX</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> packets</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 9</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  bytes</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 682</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (682.0 </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">B</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        TX</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> errors</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  dropped</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> overruns</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  carrier</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  collisions</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># netns内部的网络路由可以看到规则有</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># - 所有未知目标IP地址的网络流量都将通过eth12设备，并通过网关10.15.20.1转发到其他网络</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># - 将目标IP地址1.1.1.1的网络流量通过eth12设备，并通过网关10.15.20.1转发到其他网络</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># - 本地网络10.15.20.0/24的所有流量都通过eth12设备发送，并且源IP地址为10.15.20.2</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># &quot;proto kernel&quot;表示该路由是由内核自动生成的。 &quot;scope link&quot; 表示该路由只适用于本地链路</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> netns</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1234567890</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> route</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">default</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> via</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10.15.20.1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> eth12</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                                 #  &quot;dev&quot; 是指指定该路由器的出口网络接口，即数据包是从哪个网络接口发送出去的, 默认路由通过 eth12 网络接口，经过 10.15.20.1 这个下一跳地址进行转发</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1.1.1.1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> via</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10.15.20.1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> eth12</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                                 #  &quot;via&quot; 是指默认路由的下一跳地址，即数据包需要经过哪个路由器进行转发</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">10.15.20.0/24</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> eth12</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> proto</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> kernel</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> scope</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> link</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> src</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10.15.20.2</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   #  &quot;src&quot; 是指源IP地址，即指定该路由器发送数据包的源IP地址</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看网桥配置可以看到netns内部网卡eth12的veth pair对端网卡是vethb4336cfa</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> brctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> show</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bridge</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     bridge</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> id</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">               STP</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> enabled</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     interfaces</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cni_bridge0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     8000.127bceaee96d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       no</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">              vethb4336cfa</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-配置解析" tabindex="-1"><a class="header-anchor" href="#_3-配置解析"><span>3.配置解析</span></a></h5><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;cniVersion&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;定义适用的 CNI 规范的版本&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;网络名称&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;type&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;您希望使用的插件的名称。在这种情况下，插件可执行文件的实际名称&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;bridge&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;创建名为cni_bridge0的网桥接口&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;isGateway&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;如果为真，则为网桥分配一个IP地址，以便连接到它的容器可以将其用作网关&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;ipMasq&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;为此网络配置出站伪装（源 NAT）&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;ipam&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        &quot;type&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;IPAM 插件可执行文件的名称&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        &quot;subnet&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;要分配的子网（这实际上是 IPAM 插件的一部分），这个其实决定了容器内的网址&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        &quot;routes&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">&quot;dst&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;您希望访问的子网&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> },</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">&quot;dst&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;您希望访问的子网&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">&quot;gw&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;到达dst的下一跳IP地址。如果未指定，则假定为子网的默认网关&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        ]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-命名描述" tabindex="-1"><a class="header-anchor" href="#_4-命名描述"><span>4.命名描述</span></a></h5><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CNI_COMMAND</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ADD</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> –</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 我们告诉</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CNI</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 我们想要添加一个连接</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CNI_CONTAINER</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">1234567890</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> –</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 我们告诉</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CNI</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 我们想要使用的网络命名空间称为“1234567890”（更多内容见下文）</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CNI_NETNS</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/var/run/netns/1234567890</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> –</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 相关命名空间的路径</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CNI_IFNAME</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">eth12</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> –</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 我们希望在连接的容器端使用的接口名称</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CNI_PATH</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">`</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">pwd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  –</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 我们总是需要告诉</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CNI</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 插件可执行文件所在的位置。在这种情况下，</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">因为我们已经在“cni”目录中，所以我们只有变量引用</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pwd（当前工作目录）。</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">您需要命令</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pwd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 周围的刻度线才能正确评估。此处的格式似乎正在删除它们，但它们在上面的命令中正确</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">我们使用</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> STDIN</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 将网络配置文件提供给插件</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',21)]))}]]),t=JSON.parse('{"path":"/posts/cni/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8CNI%E7%BB%99docker%E5%AE%B9%E5%99%A8%E5%88%86%E9%85%8D%E7%BD%91%E7%BB%9C.html","title":"如何使用CNI给docker容器分配网络","lang":"zh-CN","frontmatter":{"title":"如何使用CNI给docker容器分配网络","tags":["docker"],"categories":["docker"],"description":"使用docker创建无网络的容器，然后使用CNI插件手动分配网卡和网桥等 1.安装docker和cni plugins docker cni plugins 本文参考手册CNI README.md 2.脚本创建网络命名空间并分配网络quickStart 3.对docker创建好的容器分配网络并查看网络配置docker 4.CNI在容器网络分配时候相关配...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://weiqiangxu.github.io/posts/cni/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8CNI%E7%BB%99docker%E5%AE%B9%E5%99%A8%E5%88%86%E9%85%8D%E7%BD%91%E7%BB%9C.html"}],["meta",{"property":"og:site_name","content":"QuickStart程序员"}],["meta",{"property":"og:title","content":"如何使用CNI给docker容器分配网络"}],["meta",{"property":"og:description","content":"使用docker创建无网络的容器，然后使用CNI插件手动分配网卡和网桥等 1.安装docker和cni plugins docker cni plugins 本文参考手册CNI README.md 2.脚本创建网络命名空间并分配网络quickStart 3.对docker创建好的容器分配网络并查看网络配置docker 4.CNI在容器网络分配时候相关配..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"docker"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"如何使用CNI给docker容器分配网络\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuweiqiang\\",\\"url\\":\\"https://weiqiangxu.github.io\\"}]}"]]},"headers":[{"level":3,"title":"1.安装docker和cni plugins","slug":"_1-安装docker和cni-plugins","link":"#_1-安装docker和cni-plugins","children":[]},{"level":3,"title":"2.脚本创建网络命名空间并分配网络quickStart","slug":"_2-脚本创建网络命名空间并分配网络quickstart","link":"#_2-脚本创建网络命名空间并分配网络quickstart","children":[]},{"level":3,"title":"3.对docker创建好的容器分配网络并查看网络配置docker","slug":"_3-对docker创建好的容器分配网络并查看网络配置docker","link":"#_3-对docker创建好的容器分配网络并查看网络配置docker","children":[]},{"level":3,"title":"4.CNI在容器网络分配时候相关配置以及操作描述","slug":"_4-cni在容器网络分配时候相关配置以及操作描述","link":"#_4-cni在容器网络分配时候相关配置以及操作描述","children":[]}],"readingTime":{"minutes":4.19,"words":1256},"filePathRelative":"posts/cni/如何使用CNI给docker容器分配网络.md","excerpt":"<blockquote>\\n<p>使用docker创建无网络的容器，然后使用CNI插件手动分配网卡和网桥等</p>\\n</blockquote>\\n<h3>1.安装docker和cni plugins</h3>\\n<ul>\\n<li>docker</li>\\n<li>cni plugins</li>\\n</ul>\\n<p><a href=\\"https://github.com/containernetworking/cni/blob/main/README.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">本文参考手册CNI README.md</a></p>\\n<h3>2.脚本创建网络命名空间并分配网络quickStart</h3>","autoDesc":true}')}}]);