"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9436],{6262:(s,e)=>{e.A=(s,e)=>{const n=s.__vccOpts||s;for(const[s,a]of e)n[s]=a;return n}},2364:(s,e,n)=>{n.r(e),n.d(e,{comp:()=>l,data:()=>t});var a=n(641);const i={},l=(0,n(6262).A)(i,[["render",function(s,e){return(0,a.uX)(),(0,a.CE)("div",null,e[0]||(e[0]=[(0,a.Fv)('<h1 id="云原生-cloud-native" tabindex="-1"><a class="header-anchor" href="#云原生-cloud-native"><span>云原生（Cloud Native）</span></a></h1><blockquote><p>Google 主导成立了云原生计算基金会（CNCF） 最初定义</p></blockquote><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>应用容器化</span></span>\n<span class="line"><span>面向微服务架构</span></span>\n<span class="line"><span>应用支持容器的编排调度</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>CNCF 最终定义</p></blockquote><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>云原生技术有利于各组织在公有云、私有云和混合云等新型动态环境中，构建和运行可弹性扩展的应用。</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>云原生的代表技术包括容器、服务网格、微服务、不可变基础设施和声明式 API。</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>这些技术能够构建容错性好、易于管理和便于观察的松耦合系统。</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>结合可靠的自动化手段，云原生技术使工程师能够轻松地对系统作出频繁和可预测的重大变更。</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>云原生计算基金会（CNCF）致力于培育和维护一个厂商中立的开源生态系统，来推广云原生技术。</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>我们通过将最前沿的模式民主化，让这些创新为大众所用。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="关键字" tabindex="-1"><a class="header-anchor" href="#关键字"><span>关键字</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>可弹性扩展</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>容器、服务网格、微服务</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>声明式 API</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>容错性</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>松耦合</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="声明式api" tabindex="-1"><a class="header-anchor" href="#声明式api"><span>声明式API</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>具体体现为 yaml 文件的表现形式，k8s的pod创建都是可以基于描述文件</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>kubectl create -f xxx.yaml</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>还有一种就是命令式</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>总之 CNCF 给出的定义云原生就是 容器化、微服务、动态调度</p></blockquote><h3 id="kubernetes中的基本资源类型" tabindex="-1"><a class="header-anchor" href="#kubernetes中的基本资源类型"><span>Kubernetes中的基本资源类型</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>部署：Deploymnt、ReplicaSet、StatefulSet、DaemonSet、Job、CronJob</span></span>\n<span class="line"><span>服务：Service、Ingress</span></span>\n<span class="line"><span>存储：PV、PVC、ConfigMap、Secret</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',12)]))}]]),t=JSON.parse('{"path":"/posts/kubernetes/2.1%20%E4%BA%91%E5%8E%9F%E7%94%9F%E7%9A%84%E5%AE%9A%E4%B9%89.html","title":"云原生（Cloud Native）","lang":"zh-CN","frontmatter":{"hide":true,"description":"云原生（Cloud Native） Google 主导成立了云原生计算基金会（CNCF） 最初定义 CNCF 最终定义 关键字 声明式API 总之 CNCF 给出的定义云原生就是 容器化、微服务、动态调度 Kubernetes中的基本资源类型","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://weiqiangxu.github.io/posts/kubernetes/2.1%20%E4%BA%91%E5%8E%9F%E7%94%9F%E7%9A%84%E5%AE%9A%E4%B9%89.html"}],["meta",{"property":"og:site_name","content":"QuickStart程序员"}],["meta",{"property":"og:title","content":"云原生（Cloud Native）"}],["meta",{"property":"og:description","content":"云原生（Cloud Native） Google 主导成立了云原生计算基金会（CNCF） 最初定义 CNCF 最终定义 关键字 声明式API 总之 CNCF 给出的定义云原生就是 容器化、微服务、动态调度 Kubernetes中的基本资源类型"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"云原生（Cloud Native）\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuweiqiang\\",\\"url\\":\\"https://weiqiangxu.github.io\\"}]}"]]},"headers":[{"level":3,"title":"关键字","slug":"关键字","link":"#关键字","children":[]},{"level":3,"title":"声明式API","slug":"声明式api","link":"#声明式api","children":[]},{"level":3,"title":"Kubernetes中的基本资源类型","slug":"kubernetes中的基本资源类型","link":"#kubernetes中的基本资源类型","children":[]}],"readingTime":{"minutes":1.26,"words":379},"filePathRelative":"posts/kubernetes/2.1 云原生的定义.md","excerpt":"\\n<blockquote>\\n<p>Google 主导成立了云原生计算基金会（CNCF） 最初定义</p>\\n</blockquote>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>应用容器化</span></span>\\n<span class=\\"line\\"><span>面向微服务架构</span></span>\\n<span class=\\"line\\"><span>应用支持容器的编排调度</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}')}}]);