"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8350],{6262:(s,n)=>{n.A=(s,n)=>{const a=s.__vccOpts||s;for(const[s,e]of n)a[s]=e;return a}},412:(s,n,a)=>{a.r(n),a.d(n,{comp:()=>l,data:()=>p});var e=a(641);const i={},l=(0,a(6262).A)(i,[["render",function(s,n){return(0,e.uX)(),(0,e.CE)("div",null,n[0]||(n[0]=[(0,e.Fv)('<h1 id="ci" tabindex="-1"><a class="header-anchor" href="#ci"><span>CI</span></a></h1><p><a href="https://docs.gitlab.com/ee/ci/" target="_blank" rel="noopener noreferrer">https://docs.gitlab.com/ee/ci/</a></p><p><a href="https://docs.gitlab.com/ee/ci/pipelines/pipeline_architectures.html#basic-pipelines" target="_blank" rel="noopener noreferrer">基本管道</a></p><p><a href="https://docs.gitlab.cn/jh/ci/yaml/gitlab_ci_yaml.html" target="_blank" rel="noopener noreferrer">gitlab_ci_yaml编写规则</a></p><p><a href="https://blog.csdn.net/qq_27759825/article/details/124691745" target="_blank" rel="noopener noreferrer">手把手教学编写gitlab-ci.yml文件以及应用</a></p><h3 id="大致步骤" tabindex="-1"><a class="header-anchor" href="#大致步骤"><span>大致步骤</span></a></h3><ol><li><p>编写.gitlab-ci.yml文件</p></li><li><p>通过tags和runner关联</p></li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>stages:</span></span>\n<span class="line"><span>  - build</span></span>\n<span class="line"><span>  - deploy</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>image: alpine</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>build:</span></span>\n<span class="line"><span>  stage: build</span></span>\n<span class="line"><span>  tags :</span></span>\n<span class="line"><span>    - test</span></span>\n<span class="line"><span>  script:</span></span>\n<span class="line"><span>    - echo &quot;build success&quot;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>deploy:</span></span>\n<span class="line"><span>  stage: deploy</span></span>\n<span class="line"><span>  tags :</span></span>\n<span class="line"><span>    - test</span></span>\n<span class="line"><span>  script:</span></span>\n<span class="line"><span>    - echo &quot;deploy success&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>k8s build &amp;&amp; deploy</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># 开发环境</span></span>\n<span class="line"><span>build-k8s-develop:</span></span>\n<span class="line"><span>  stage: build-k8s</span></span>\n<span class="line"><span>  tags:</span></span>\n<span class="line"><span>    - ack-runner</span></span>\n<span class="line"><span>  script:</span></span>\n<span class="line"><span>    - make build-k8s-develop</span></span>\n<span class="line"><span>  cache:</span></span>\n<span class="line"><span>    key: go-cache-${CI_PROJECT_PATH_SLUG}</span></span>\n<span class="line"><span>    paths:</span></span>\n<span class="line"><span>      - go/</span></span>\n<span class="line"><span>  only:</span></span>\n<span class="line"><span>    refs:</span></span>\n<span class="line"><span>      - develop</span></span>\n<span class="line"><span>      - /^feature\\/.*/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>build-k8s-develop: ci/binary Dockerfile</span></span>\n<span class="line"><span>\t@docker login -u $(TRI_USER) -p $(TRI_PWD) $(TRI_HOST)</span></span>\n<span class="line"><span>\t@docker build -q -t $(DOCKER_IMAGE_DEVELOP):$(DEV_TAG) .</span></span>\n<span class="line"><span>\t@docker push $(DOCKER_IMAGE_DEVELOP):$(DEV_TAG)</span></span>\n<span class="line"><span>\t@rm $(NAME) Dockerfile</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>deploy-k8s/develop:</span></span>\n<span class="line"><span>\t@cd /builds &amp;&amp;\\</span></span>\n<span class="line"><span>\tgit clone https://$(CI_USERNAME):$(CI_PASSWORD)@git.net/devops/kustomize.git &amp;&amp;\\</span></span>\n<span class="line"><span>\tcd kustomize/develop/overlays/$(NAME) &amp;&amp;\\</span></span>\n<span class="line"><span>\t/usr/local/bin/kustomize edit set image default_image=$(DOCKER_IMAGE_DEVELOP):$(DEV_TAG) &amp;&amp;\\</span></span>\n<span class="line"><span>\tgit add . &amp;&amp;\\</span></span>\n<span class="line"><span>\tgit commit -am &quot;update $(PROJECT_NAME) develop kustomize config &quot; &amp;&amp;\\</span></span>\n<span class="line"><span>\tgit pull &amp;&amp;\\</span></span>\n<span class="line"><span>\tgit push origin main || sleep 1 &amp;&amp; git pull &amp;&amp; git push origin main || echo &quot;nothing to commit&quot; &amp;&amp;\\</span></span>\n<span class="line"><span>\techo &quot;xxxx-&gt;$(ARGO_HOST)&quot; &amp;&amp;\\</span></span>\n<span class="line"><span>\techo y | /usr/local/bin/argocd --grpc-web --insecure login $(ARGO_HOST)  --username $(ARGO_USER) --password $(ARGO_PWD) &amp;&amp;\\</span></span>\n<span class="line"><span>\t/usr/local/bin/argocd  app sync $(NEW_NAME) || echo &quot;argo sync failed&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',12)]))}]]),p=JSON.parse('{"path":"/posts/gitlab/gitlab-ci%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99.html","title":"CI","lang":"zh-CN","frontmatter":{"hide":true,"description":"CI https://docs.gitlab.com/ee/ci/ 基本管道 gitlab_ci_yaml编写规则 手把手教学编写gitlab-ci.yml文件以及应用 大致步骤 编写.gitlab-ci.yml文件 通过tags和runner关联 k8s build && deploy","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://weiqiangxu.github.io/posts/gitlab/gitlab-ci%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99.html"}],["meta",{"property":"og:site_name","content":"QuickStart程序员"}],["meta",{"property":"og:title","content":"CI"}],["meta",{"property":"og:description","content":"CI https://docs.gitlab.com/ee/ci/ 基本管道 gitlab_ci_yaml编写规则 手把手教学编写gitlab-ci.yml文件以及应用 大致步骤 编写.gitlab-ci.yml文件 通过tags和runner关联 k8s build && deploy"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CI\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuweiqiang\\",\\"url\\":\\"https://weiqiangxu.github.io\\"}]}"]]},"headers":[{"level":3,"title":"大致步骤","slug":"大致步骤","link":"#大致步骤","children":[]}],"readingTime":{"minutes":0.72,"words":216},"filePathRelative":"posts/gitlab/gitlab-ci如何编写.md","excerpt":"\\n<p><a href=\\"https://docs.gitlab.com/ee/ci/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://docs.gitlab.com/ee/ci/</a></p>\\n<p><a href=\\"https://docs.gitlab.com/ee/ci/pipelines/pipeline_architectures.html#basic-pipelines\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">基本管道</a></p>\\n<p><a href=\\"https://docs.gitlab.cn/jh/ci/yaml/gitlab_ci_yaml.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">gitlab_ci_yaml编写规则</a></p>","autoDesc":true}')}}]);