"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6820],{6262:(e,t)=>{t.A=(e,t)=>{const i=e.__vccOpts||e;for(const[e,n]of t)i[e]=n;return i}},6192:(e,t,i)=>{i.r(t),i.d(t,{comp:()=>l,data:()=>o});var n=i(641);const r={},l=(0,i(6262).A)(r,[["render",function(e,t){return(0,n.uX)(),(0,n.CE)("div",null,t[0]||(t[0]=[(0,n.Lk)("h3",{id:"关键术语",tabindex:"-1"},[(0,n.Lk)("a",{class:"header-anchor",href:"#关键术语"},[(0,n.Lk)("span",null,"关键术语")])],-1),(0,n.Lk)("ol",null,[(0,n.Lk)("li",null,"time.sleep后 _Grunning 和 _Gwaiting，timer之中的回调函数将g变成Grunnable状态放回runq"),(0,n.Lk)("li",null,"以上谁负责执行timer之中的回调函数呢 (schedule()->checkTimers)"),(0,n.Lk)("li",null,"监控线程（重复执行某一个任务） - 不依赖GMP、main.goroutine创建 ， 监控timer可以创建线程执行"),(0,n.Lk)("li",null,"IO时间监听队列 - 主动轮询netpoll")],-1),(0,n.Lk)("p",null,[(0,n.Lk)("a",{href:"https://www.bilibili.com/video/BV1hv411x7we",target:"_blank",rel:"noopener noreferrer"},"Golang合集")],-1)]))}]]),o=JSON.parse('{"path":"/posts/go/GMP-%E5%8D%8F%E7%A8%8B%E8%AE%A9%E5%87%BA%E6%8A%A2%E5%8D%A0%E8%B0%83%E5%BA%A6%E7%9B%91%E6%8E%A7.html","title":"抢占式调度","lang":"zh-CN","frontmatter":{"title":"抢占式调度","tags":["GO原理"],"categories":["go"],"date":"2023-04-08T06:40:12.000Z","index_img":"/images/bg/computer.jpeg","hide":true,"description":"关键术语 time.sleep后 _Grunning 和 _Gwaiting，timer之中的回调函数将g变成Grunnable状态放回runq 以上谁负责执行timer之中的回调函数呢 (schedule()->checkTimers) 监控线程（重复执行某一个任务） - 不依赖GMP、main.goroutine创建 ， 监控timer可以创建线程...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://weiqiangxu.github.io/posts/go/GMP-%E5%8D%8F%E7%A8%8B%E8%AE%A9%E5%87%BA%E6%8A%A2%E5%8D%A0%E8%B0%83%E5%BA%A6%E7%9B%91%E6%8E%A7.html"}],["meta",{"property":"og:site_name","content":"QuickStart程序员"}],["meta",{"property":"og:title","content":"抢占式调度"}],["meta",{"property":"og:description","content":"关键术语 time.sleep后 _Grunning 和 _Gwaiting，timer之中的回调函数将g变成Grunnable状态放回runq 以上谁负责执行timer之中的回调函数呢 (schedule()->checkTimers) 监控线程（重复执行某一个任务） - 不依赖GMP、main.goroutine创建 ， 监控timer可以创建线程..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"GO原理"}],["meta",{"property":"article:published_time","content":"2023-04-08T06:40:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"抢占式调度\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-04-08T06:40:12.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuweiqiang\\",\\"url\\":\\"https://weiqiangxu.github.io\\"}]}"]]},"headers":[{"level":3,"title":"关键术语","slug":"关键术语","link":"#关键术语","children":[]}],"readingTime":{"minutes":0.4,"words":120},"filePathRelative":"posts/go/GMP-协程让出抢占调度监控.md","localizedDate":"2023年4月8日","excerpt":"<h3>关键术语</h3>\\n<ol>\\n<li>time.sleep后 _Grunning 和 _Gwaiting，timer之中的回调函数将g变成Grunnable状态放回runq</li>\\n<li>以上谁负责执行timer之中的回调函数呢 (schedule()-&gt;checkTimers)</li>\\n<li>监控线程（重复执行某一个任务） - 不依赖GMP、main.goroutine创建 ， 监控timer可以创建线程执行</li>\\n<li>IO时间监听队列 - 主动轮询netpoll</li>\\n</ol>\\n<p><a href=\\"https://www.bilibili.com/video/BV1hv411x7we\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Golang合集</a></p>","autoDesc":true}')}}]);