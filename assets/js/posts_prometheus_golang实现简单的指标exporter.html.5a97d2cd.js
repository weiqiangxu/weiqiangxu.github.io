"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3057],{6262:(n,s)=>{s.A=(n,s)=>{const e=n.__vccOpts||n;for(const[n,a]of s)e[n]=a;return e}},5338:(n,s,e)=>{e.r(s),e.d(s,{comp:()=>t,data:()=>p});var a=e(641);const i={},t=(0,e(6262).A)(i,[["render",function(n,s){return(0,a.uX)(),(0,a.CE)("div",null,s[0]||(s[0]=[(0,a.Fv)('<h3 id="code" tabindex="-1"><a class="header-anchor" href="#code"><span>code</span></a></h3><div class="language-golang line-numbers-mode" data-highlighter="shiki" data-ext="golang" data-title="golang" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>package main</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>import (</span></span>\n<span class="line"><span>\t&quot;net/http&quot;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>\t&quot;github.com/prometheus/client_golang/prometheus&quot;</span></span>\n<span class="line"><span>\t&quot;github.com/prometheus/client_golang/prometheus/collectors&quot;</span></span>\n<span class="line"><span>\t&quot;github.com/prometheus/client_golang/prometheus/promhttp&quot;</span></span>\n<span class="line"><span>)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>var requestCounter = prometheus.NewCounter(prometheus.CounterOpts{</span></span>\n<span class="line"><span>\tNamespace:   &quot;app&quot;,</span></span>\n<span class="line"><span>\tSubsystem:   &quot;system&quot;,</span></span>\n<span class="line"><span>\tName:        &quot;request&quot;,</span></span>\n<span class="line"><span>\tHelp:        &quot;request counter&quot;,</span></span>\n<span class="line"><span>\tConstLabels: map[string]string{},</span></span>\n<span class="line"><span>})</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>func init() {</span></span>\n<span class="line"><span>\tprometheus.DefaultRegisterer.Unregister(collectors.NewGoCollector())</span></span>\n<span class="line"><span>\tprometheus.MustRegister(requestCounter)</span></span>\n<span class="line"><span>}</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>// go语言实现 http服务端</span></span>\n<span class="line"><span>// http://127.0.0.1:8989/hello</span></span>\n<span class="line"><span>func main() {</span></span>\n<span class="line"><span>\thttp.HandleFunc(&quot;/hello&quot;, func(writer http.ResponseWriter, request *http.Request) {</span></span>\n<span class="line"><span>\t\trequestCounter.Inc()</span></span>\n<span class="line"><span>\t\t_, _ = writer.Write([]byte(&quot;hello world&quot;))</span></span>\n<span class="line"><span>\t})</span></span>\n<span class="line"><span>\thttp.Handle(&quot;/metrics&quot;, promhttp.Handler())</span></span>\n<span class="line"><span>\terr := http.ListenAndServe(&quot;127.0.0.1:6969&quot;, nil)</span></span>\n<span class="line"><span>\tif err != nil {</span></span>\n<span class="line"><span>\t\tpanic(err)</span></span>\n<span class="line"><span>\t}</span></span>\n<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',2)]))}]]),p=JSON.parse('{"path":"/posts/prometheus/golang%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84%E6%8C%87%E6%A0%87exporter.html","title":"golang实现简单的指标exporter","lang":"zh-CN","frontmatter":{"title":"golang实现简单的指标exporter","index_img":"/images/prometheus_icon.jpeg","tags":["prometheus"],"categories":["prometheus"],"date":"2023-04-10T06:40:12.000Z","excerpt":"使用go实现简单的指标用于测试prometheus","sticky":1,"description":"code","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://weiqiangxu.github.io/posts/prometheus/golang%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84%E6%8C%87%E6%A0%87exporter.html"}],["meta",{"property":"og:site_name","content":"QuickStart程序员"}],["meta",{"property":"og:title","content":"golang实现简单的指标exporter"}],["meta",{"property":"og:description","content":"code"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"prometheus"}],["meta",{"property":"article:published_time","content":"2023-04-10T06:40:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"golang实现简单的指标exporter\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-04-10T06:40:12.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuweiqiang\\",\\"url\\":\\"https://weiqiangxu.github.io\\"}]}"]]},"headers":[{"level":3,"title":"code","slug":"code","link":"#code","children":[]}],"readingTime":{"minutes":0.39,"words":116},"filePathRelative":"posts/prometheus/golang实现简单的指标exporter.md","localizedDate":"2023年4月10日","autoDesc":true}')}}]);