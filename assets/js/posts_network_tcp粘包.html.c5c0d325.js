"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1395],{6262:(e,t)=>{t.A=(e,t)=>{const i=e.__vccOpts||e;for(const[e,a]of t)i[e]=a;return i}},9401:(e,t,i)=>{i.r(t),i.d(t,{comp:()=>s,data:()=>r});var a=i(641);const n={},s=(0,i(6262).A)(n,[["render",function(e,t){return(0,a.uX)(),(0,a.CE)("div",null,t[0]||(t[0]=[(0,a.Fv)('<blockquote><p>理解什么是tcp粘包以及如何解决粘包的问题</p></blockquote><h1 id="tcp-粘包" tabindex="-1"><a class="header-anchor" href="#tcp-粘包"><span>tcp 粘包</span></a></h1><p><a href="https://www.topgoer.com/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/socket%E7%BC%96%E7%A8%8B/TCP%E9%BB%8F%E5%8C%85.html" target="_blank" rel="noopener noreferrer">TCP黏包</a></p><h3 id="什么是粘包" tabindex="-1"><a class="header-anchor" href="#什么是粘包"><span>什么是粘包</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>多次 net.Conn.Write 数据在服务端被当成同一份数据解析</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="什么情况下会出现" tabindex="-1"><a class="header-anchor" href="#什么情况下会出现"><span>什么情况下会出现</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>1. 客户端将两段数据合并起来发送导致粘包 (Nagle算法一种改善网络传输效率的算法)</span></span>\n<span class="line"><span>2. 接收端缓冲区将数据缓存，然后通知应用层取数据</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="解决办法" tabindex="-1"><a class="header-anchor" href="#解决办法"><span>解决办法</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>封包</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>客户端和服务端遵循统一中封装和拆包的协议</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="http是如何解决tcp粘包的问题的呢" tabindex="-1"><a class="header-anchor" href="#http是如何解决tcp粘包的问题的呢"><span>http是如何解决tcp粘包的问题的呢</span></a></h3>',10)]))}]]),r=JSON.parse('{"path":"/posts/network/tcp%E7%B2%98%E5%8C%85.html","title":"tcp粘包","lang":"zh-CN","frontmatter":{"title":"tcp粘包","tags":["network"],"categories":["network"],"description":"理解什么是tcp粘包以及如何解决粘包的问题 tcp 粘包 TCP黏包 什么是粘包 什么情况下会出现 解决办法 http是如何解决tcp粘包的问题的呢","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://weiqiangxu.github.io/posts/network/tcp%E7%B2%98%E5%8C%85.html"}],["meta",{"property":"og:site_name","content":"笔记本"}],["meta",{"property":"og:title","content":"tcp粘包"}],["meta",{"property":"og:description","content":"理解什么是tcp粘包以及如何解决粘包的问题 tcp 粘包 TCP黏包 什么是粘包 什么情况下会出现 解决办法 http是如何解决tcp粘包的问题的呢"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"network"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"tcp粘包\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuweiqiang\\",\\"url\\":\\"https://weiqiangxu.github.io\\"}]}"]]},"headers":[{"level":3,"title":"什么是粘包","slug":"什么是粘包","link":"#什么是粘包","children":[]},{"level":3,"title":"什么情况下会出现","slug":"什么情况下会出现","link":"#什么情况下会出现","children":[]},{"level":3,"title":"解决办法","slug":"解决办法","link":"#解决办法","children":[]},{"level":3,"title":"http是如何解决tcp粘包的问题的呢","slug":"http是如何解决tcp粘包的问题的呢","link":"#http是如何解决tcp粘包的问题的呢","children":[]}],"readingTime":{"minutes":0.63,"words":188},"filePathRelative":"posts/network/tcp粘包.md","excerpt":"<blockquote>\\n<p>理解什么是tcp粘包以及如何解决粘包的问题</p>\\n</blockquote>\\n<h1>tcp 粘包</h1>\\n<p><a href=\\"https://www.topgoer.com/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/socket%E7%BC%96%E7%A8%8B/TCP%E9%BB%8F%E5%8C%85.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">TCP黏包</a></p>\\n<h3>什么是粘包</h3>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>多次 net.Conn.Write 数据在服务端被当成同一份数据解析</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}')}}]);