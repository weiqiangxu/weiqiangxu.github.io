"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[621],{6262:(i,s)=>{s.A=(i,s)=>{const a=i.__vccOpts||i;for(const[i,n]of s)a[i]=n;return a}},4864:(i,s,a)=>{a.r(s),a.d(s,{comp:()=>l,data:()=>t});var n=a(641);const e={},l=(0,a(6262).A)(e,[["render",function(i,s){return(0,n.uX)(),(0,n.CE)("div",null,s[0]||(s[0]=[(0,n.Fv)('<h3 id="一、makefile-code" tabindex="-1"><a class="header-anchor" href="#一、makefile-code"><span>一、makefile code</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> touch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Makefile</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">　　command -v gofumpt || (WORK=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">$(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">shell</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pwd)</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> &amp;&amp; cd /tmp &amp;&amp; GO111MODULE=on go install mvdan.cc/gofumpt@latest &amp;&amp; cd </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">$(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">WORK</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">　　gofumpt -w -d .</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">lint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">　　command -v golangci-lint || (WORK=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">$(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">shell</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pwd)</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> &amp;&amp; cd /tmp &amp;&amp; GO111MODULE=on go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.49.0 &amp;&amp; cd </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">$(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">WORK</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">　　golangci-lint run  -v</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ci/lint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> export GOPATH=/go</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ci/lint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> export GO111MODULE=on</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ci/lint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> export GOPROXY=https://goproxy.cn</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ci/lint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> export GOPRIVATE=code.my.net</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ci/lint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> export GOOS=linux</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ci/lint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> export CGO_ENABLED=1</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ci/lint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> lint</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="二、执行静态扫描和格式检查" tabindex="-1"><a class="header-anchor" href="#二、执行静态扫描和格式检查"><span>二、执行静态扫描和格式检查</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> make</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">make</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> lint</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>',5)]))}]]),t=JSON.parse('{"path":"/posts/go/golang%E9%9D%99%E6%80%81%E6%89%AB%E6%8F%8F%E5%92%8C%E6%A0%BC%E5%BC%8F%E6%A3%80%E6%9F%A5.html","title":"golang静态扫描和格式检查","lang":"zh-CN","frontmatter":{"title":"golang静态扫描和格式检查","index_img":"/images/bg/golang.webp","banner_img":"/images/bg/5.jpg","tags":["golang","golangci-lint","fmt"],"categories":["golang"],"date":"2020-08-20T17:43:12.000Z","excerpt":"mackefile静态扫描和格式检查","description":"一、makefile code 二、执行静态扫描和格式检查","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://weiqiangxu.github.io/posts/go/golang%E9%9D%99%E6%80%81%E6%89%AB%E6%8F%8F%E5%92%8C%E6%A0%BC%E5%BC%8F%E6%A3%80%E6%9F%A5.html"}],["meta",{"property":"og:site_name","content":"QuickStart程序员"}],["meta",{"property":"og:title","content":"golang静态扫描和格式检查"}],["meta",{"property":"og:description","content":"一、makefile code 二、执行静态扫描和格式检查"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"golang"}],["meta",{"property":"article:tag","content":"golangci-lint"}],["meta",{"property":"article:tag","content":"fmt"}],["meta",{"property":"article:published_time","content":"2020-08-20T17:43:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"golang静态扫描和格式检查\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-08-20T17:43:12.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuweiqiang\\",\\"url\\":\\"https://weiqiangxu.github.io\\"}]}"]]},"headers":[{"level":3,"title":"一、makefile code","slug":"一、makefile-code","link":"#一、makefile-code","children":[]},{"level":3,"title":"二、执行静态扫描和格式检查","slug":"二、执行静态扫描和格式检查","link":"#二、执行静态扫描和格式检查","children":[]}],"readingTime":{"minutes":0.45,"words":134},"filePathRelative":"posts/go/golang静态扫描和格式检查.md","localizedDate":"2020年8月21日","autoDesc":true}')}}]);