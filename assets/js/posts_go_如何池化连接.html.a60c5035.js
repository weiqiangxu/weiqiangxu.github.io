"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1099],{6262:(e,t)=>{t.A=(e,t)=>{const r=e.__vccOpts||e;for(const[e,l]of t)r[e]=l;return r}},1972:(e,t,r)=>{r.r(t),r.d(t,{comp:()=>i,data:()=>a});var l=r(641);const n={},i=(0,r(6262).A)(n,[["render",function(e,t){return(0,l.uX)(),(0,l.CE)("div",null,t[0]||(t[0]=[(0,l.Fv)('<h1 id="如何池化连接" tabindex="-1"><a class="header-anchor" href="#如何池化连接"><span>如何池化连接</span></a></h1><ol><li>实现原理</li><li>具体抽象</li><li>扩缩容机制</li><li>超时与保活</li><li>池满策略</li></ol><h3 id="grpc调优" tabindex="-1"><a class="header-anchor" href="#grpc调优"><span>GRPC调优</span></a></h3><h3 id="grpc特性" tabindex="-1"><a class="header-anchor" href="#grpc特性"><span>GRPC特性</span></a></h3><ol><li>多路复用。HTTP/2作为应用层的传输协议。HTTP/2会复用传输层的TCP连接，但是Client有些条件些会新建连接（server发送GOAWAY Frame也会强制让client新建连接）</li><li>一次GRPC调用就产生一个Stream（Stream包含多个Frame,Frame也是HTTP/2最小传输单位）</li><li>一条GRPC连接允许并发的发送和接收多个Stream（服务端默认100个）控制参数MaxConcurrentStreams</li><li>超时重连。创建连接后有一个goroutine负责重连机制,自带的</li></ol><blockquote><p>Dial或者DialContext没有WithBlock的话是异步建立连接，会有重试机制。</p></blockquote><h3 id="相关博客" tabindex="-1"><a class="header-anchor" href="#相关博客"><span>相关博客</span></a></h3><p><a href="https://github.com/silenceper/pool/blob/master/README_ZH_CN.md" target="_blank" rel="noopener noreferrer">silenceper/pool/</a><a href="https://pandaychen.github.io/2020/10/03/DO-WE-NEED-GRPC-CLIENT-POOL/" target="_blank" rel="noopener noreferrer">gRPC 应用篇之客户端 Connection Pool</a><a href="https://zhuanlan.zhihu.com/p/100200985" target="_blank" rel="noopener noreferrer">GRPC连接池的设计与实现</a></p>',8)]))}]]),a=JSON.parse('{"path":"/posts/go/%E5%A6%82%E4%BD%95%E6%B1%A0%E5%8C%96%E8%BF%9E%E6%8E%A5.html","title":"如何池化连接","lang":"zh-CN","frontmatter":{"hide":true,"description":"如何池化连接 实现原理 具体抽象 扩缩容机制 超时与保活 池满策略 GRPC调优 GRPC特性 多路复用。HTTP/2作为应用层的传输协议。HTTP/2会复用传输层的TCP连接，但是Client有些条件些会新建连接（server发送GOAWAY Frame也会强制让client新建连接） 一次GRPC调用就产生一个Stream（Stream包含多个Fr...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://weiqiangxu.github.io/posts/go/%E5%A6%82%E4%BD%95%E6%B1%A0%E5%8C%96%E8%BF%9E%E6%8E%A5.html"}],["meta",{"property":"og:site_name","content":"QuickStart程序员"}],["meta",{"property":"og:title","content":"如何池化连接"}],["meta",{"property":"og:description","content":"如何池化连接 实现原理 具体抽象 扩缩容机制 超时与保活 池满策略 GRPC调优 GRPC特性 多路复用。HTTP/2作为应用层的传输协议。HTTP/2会复用传输层的TCP连接，但是Client有些条件些会新建连接（server发送GOAWAY Frame也会强制让client新建连接） 一次GRPC调用就产生一个Stream（Stream包含多个Fr..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"如何池化连接\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuweiqiang\\",\\"url\\":\\"https://weiqiangxu.github.io\\"}]}"]]},"headers":[{"level":3,"title":"GRPC调优","slug":"grpc调优","link":"#grpc调优","children":[]},{"level":3,"title":"GRPC特性","slug":"grpc特性","link":"#grpc特性","children":[]},{"level":3,"title":"相关博客","slug":"相关博客","link":"#相关博客","children":[]}],"readingTime":{"minutes":0.79,"words":236},"filePathRelative":"posts/go/如何池化连接.md","excerpt":"\\n<ol>\\n<li>实现原理</li>\\n<li>具体抽象</li>\\n<li>扩缩容机制</li>\\n<li>超时与保活</li>\\n<li>池满策略</li>\\n</ol>\\n<h3>GRPC调优</h3>\\n<h3>GRPC特性</h3>\\n<ol>\\n<li>多路复用。HTTP/2作为应用层的传输协议。HTTP/2会复用传输层的TCP连接，但是Client有些条件些会新建连接（server发送GOAWAY Frame也会强制让client新建连接）</li>\\n<li>一次GRPC调用就产生一个Stream（Stream包含多个Frame,Frame也是HTTP/2最小传输单位）</li>\\n<li>一条GRPC连接允许并发的发送和接收多个Stream（服务端默认100个）控制参数MaxConcurrentStreams</li>\\n<li>超时重连。创建连接后有一个goroutine负责重连机制,自带的</li>\\n</ol>","autoDesc":true}')}}]);