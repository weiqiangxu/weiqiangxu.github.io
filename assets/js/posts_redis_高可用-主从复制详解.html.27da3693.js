"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7487],{6262:(e,s)=>{s.A=(e,s)=>{const a=e.__vccOpts||e;for(const[e,i]of s)a[e]=i;return a}},2308:(e,s,a)=>{a.r(s),a.d(s,{comp:()=>l,data:()=>r});var i=a(641);const n={},l=(0,a(6262).A)(n,[["render",function(e,s){return(0,i.uX)(),(0,i.CE)("div",null,s[0]||(s[0]=[(0,i.Fv)('<h1 id="主从复制详解" tabindex="-1"><a class="header-anchor" href="#主从复制详解"><span>主从复制详解</span></a></h1><h3 id="主从复制如何执行" tabindex="-1"><a class="header-anchor" href="#主从复制如何执行"><span>主从复制如何执行</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>replicaof 192.168.0.1 6379</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="主动复制原理" tabindex="-1"><a class="header-anchor" href="#主动复制原理"><span>主动复制原理</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>RDB + buffer</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>slave send psync</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>master send FULLRESYNC{runID,offset}</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>master bgsave create RDB &amp;&amp; create buffer </span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>master send RDB</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>slave clear data &amp; load RDB</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>master send replication buffer (after RDB write operation)</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>slave load replication buffer</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="调优思路" tabindex="-1"><a class="header-anchor" href="#调优思路"><span>调优思路</span></a></h3><ol><li>避免从服务器失联后全量复制 repl_backlog_buffer 缓冲区大小设置</li><li></li></ol><h3 id="频率" tabindex="-1"><a class="header-anchor" href="#频率"><span>频率</span></a></h3><ol><li>Redis 主节点默认每隔 10 秒对从节点发送 ping 命令判断从节点存活</li><li>从节点每隔 1 秒发送 replconf ack{offset} 命令给主节点上报自身当前的复制偏移量</li></ol><h3 id="从服务器不会自己做-过期删除或内存淘汰-主服务器内存淘汰后会生成del命令发给从服务器" tabindex="-1"><a class="header-anchor" href="#从服务器不会自己做-过期删除或内存淘汰-主服务器内存淘汰后会生成del命令发给从服务器"><span>从服务器不会自己做（过期删除或内存淘汰），主服务器内存淘汰后会生成del命令发给从服务器</span></a></h3><h3 id="关键术语" tabindex="-1"><a class="header-anchor" href="#关键术语"><span>关键术语</span></a></h3><ol><li>replication buffer</li><li>repl_backlog_buffer</li><li>全量复制</li><li>增量复制</li><li>基于长连接的命令传播</li></ol><h3 id="repl-backlog-buffer" tabindex="-1"><a class="header-anchor" href="#repl-backlog-buffer"><span>repl_backlog_buffer</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>从库断开之后，如何找到主从差异数据而设计的环形缓冲区</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>如果缓冲区被主库的写命令覆盖了，从库会重新进行全量复制</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>repl_backlog_buffer配置尽量大一些，可以降低主从断开后全量复制的概率</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="replication-buffer" tabindex="-1"><a class="header-anchor" href="#replication-buffer"><span>replication buffer</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>主从库增量复制用的buffer存储写命令用的</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="网络断开-从库再次连接-是全量还是增量" tabindex="-1"><a class="header-anchor" href="#网络断开-从库再次连接-是全量还是增量"><span>网络断开，从库再次连接，是全量还是增量</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>1. 从库的slave_repl_offset会通过psync命令发送给主库，主库根据复制进度决定</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>2. 主库repl_backlog_buffer的slave_repl_offset位置上的数据已经被覆盖掉，会全量复制</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="强烈建议主服务器开启持久化-也应该禁止自动重启" tabindex="-1"><a class="header-anchor" href="#强烈建议主服务器开启持久化-也应该禁止自动重启"><span>强烈建议主服务器开启持久化，也应该禁止自动重启</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>如果未开启持久化，且支持自动重启，在很短时间内主节点重启且空了数据集，Redis Sentinel甚至没检测到主节点的失败未切换主节点，从库的所有数据也会被清空</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="为什么主从复制使用rdb而不是用aof" tabindex="-1"><a class="header-anchor" href="#为什么主从复制使用rdb而不是用aof"><span>为什么主从复制使用RDB而不是用AOF</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>AOF重放命令耗时</span></span>\n<span class="line"><span>RDB数据重载快</span></span>\n<span class="line"><span>RDB压缩的二进制数据所以文件小、主从网络带宽占据小</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>AOF选择刷盘策略，选择不当容易影响Redis性能</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="命令repl-diskless-sync开启无磁盘复制模式" tabindex="-1"><a class="header-anchor" href="#命令repl-diskless-sync开启无磁盘复制模式"><span>命令repl-diskless-sync开启无磁盘复制模式</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>RDB不存储磁盘而是直接发送</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="主库生成-rdb-文件和传输-rdb-文件压力大-所以有从库的从库的设计" tabindex="-1"><a class="header-anchor" href="#主库生成-rdb-文件和传输-rdb-文件压力大-所以有从库的从库的设计"><span>主库生成 RDB 文件和传输 RDB 文件压力大，所以有从库的从库的设计</span></a></h3><h3 id="主从复制的命令传播异步-延迟与数据的不一致不可避免" tabindex="-1"><a class="header-anchor" href="#主从复制的命令传播异步-延迟与数据的不一致不可避免"><span>主从复制的命令传播异步，延迟与数据的不一致不可避免</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>1. 加配置扩展写和读负载</span></span>\n<span class="line"><span>2. 监控主从节点延迟（通过offset）判断，如果从节点延迟过大，通知应用不再通过该从节点读取数据</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="full-stack-knowledge-system" tabindex="-1"><a class="header-anchor" href="#full-stack-knowledge-system"><span>Full_stack_knowledge_system</span></a></h1><p><a href="https://pdai.tech/" target="_blank" rel="noopener noreferrer">pdai.tech</a></p>',29)]))}]]),r=JSON.parse('{"path":"/posts/redis/%E9%AB%98%E5%8F%AF%E7%94%A8-%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E8%AF%A6%E8%A7%A3.html","title":"主从复制详解","lang":"zh-CN","frontmatter":{"hide":true,"description":"主从复制详解 主从复制如何执行 主动复制原理 调优思路 避免从服务器失联后全量复制 repl_backlog_buffer 缓冲区大小设置 频率 Redis 主节点默认每隔 10 秒对从节点发送 ping 命令判断从节点存活 从节点每隔 1 秒发送 replconf ack{offset} 命令给主节点上报自身当前的复制偏移量 从服务器不会自己做（过期...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://weiqiangxu.github.io/posts/redis/%E9%AB%98%E5%8F%AF%E7%94%A8-%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E8%AF%A6%E8%A7%A3.html"}],["meta",{"property":"og:site_name","content":"笔记本"}],["meta",{"property":"og:title","content":"主从复制详解"}],["meta",{"property":"og:description","content":"主从复制详解 主从复制如何执行 主动复制原理 调优思路 避免从服务器失联后全量复制 repl_backlog_buffer 缓冲区大小设置 频率 Redis 主节点默认每隔 10 秒对从节点发送 ping 命令判断从节点存活 从节点每隔 1 秒发送 replconf ack{offset} 命令给主节点上报自身当前的复制偏移量 从服务器不会自己做（过期..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"主从复制详解\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuweiqiang\\",\\"url\\":\\"https://weiqiangxu.github.io\\"}]}"]]},"headers":[{"level":3,"title":"主从复制如何执行","slug":"主从复制如何执行","link":"#主从复制如何执行","children":[]},{"level":3,"title":"主动复制原理","slug":"主动复制原理","link":"#主动复制原理","children":[]},{"level":3,"title":"调优思路","slug":"调优思路","link":"#调优思路","children":[]},{"level":3,"title":"频率","slug":"频率","link":"#频率","children":[]},{"level":3,"title":"从服务器不会自己做（过期删除或内存淘汰），主服务器内存淘汰后会生成del命令发给从服务器","slug":"从服务器不会自己做-过期删除或内存淘汰-主服务器内存淘汰后会生成del命令发给从服务器","link":"#从服务器不会自己做-过期删除或内存淘汰-主服务器内存淘汰后会生成del命令发给从服务器","children":[]},{"level":3,"title":"关键术语","slug":"关键术语","link":"#关键术语","children":[]},{"level":3,"title":"repl_backlog_buffer","slug":"repl-backlog-buffer","link":"#repl-backlog-buffer","children":[]},{"level":3,"title":"replication buffer","slug":"replication-buffer","link":"#replication-buffer","children":[]},{"level":3,"title":"网络断开，从库再次连接，是全量还是增量","slug":"网络断开-从库再次连接-是全量还是增量","link":"#网络断开-从库再次连接-是全量还是增量","children":[]},{"level":3,"title":"强烈建议主服务器开启持久化，也应该禁止自动重启","slug":"强烈建议主服务器开启持久化-也应该禁止自动重启","link":"#强烈建议主服务器开启持久化-也应该禁止自动重启","children":[]},{"level":3,"title":"为什么主从复制使用RDB而不是用AOF","slug":"为什么主从复制使用rdb而不是用aof","link":"#为什么主从复制使用rdb而不是用aof","children":[]},{"level":3,"title":"命令repl-diskless-sync开启无磁盘复制模式","slug":"命令repl-diskless-sync开启无磁盘复制模式","link":"#命令repl-diskless-sync开启无磁盘复制模式","children":[]},{"level":3,"title":"主库生成 RDB 文件和传输 RDB 文件压力大，所以有从库的从库的设计","slug":"主库生成-rdb-文件和传输-rdb-文件压力大-所以有从库的从库的设计","link":"#主库生成-rdb-文件和传输-rdb-文件压力大-所以有从库的从库的设计","children":[]},{"level":3,"title":"主从复制的命令传播异步，延迟与数据的不一致不可避免","slug":"主从复制的命令传播异步-延迟与数据的不一致不可避免","link":"#主从复制的命令传播异步-延迟与数据的不一致不可避免","children":[]}],"readingTime":{"minutes":2.21,"words":664},"filePathRelative":"posts/redis/高可用-主从复制详解.md","excerpt":"\\n<h3>主从复制如何执行</h3>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>replicaof 192.168.0.1 6379</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}')}}]);