"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4366],{6262:(i,s)=>{s.A=(i,s)=>{const a=i.__vccOpts||i;for(const[i,n]of s)a[i]=n;return a}},9451:(i,s,a)=>{a.r(s),a.d(s,{comp:()=>e,data:()=>t});var n=a(641);const l={},e=(0,a(6262).A)(l,[["render",function(i,s){return(0,n.uX)(),(0,n.CE)("div",null,s[0]||(s[0]=[(0,n.Fv)('<blockquote><p>理解什么是CNI，k8s的网络模型是什么，实现的插件有哪些，相关的openvswitch又是什么</p></blockquote><h3 id="一、简短描述" tabindex="-1"><a class="header-anchor" href="#一、简短描述"><span>一、简短描述</span></a></h3><ol><li>CNCF项目;</li><li>标准化的网络接口规范;</li><li>CNI规范定义了&quot;容器运行时&quot;如何与&quot;网络插件&quot;进行通信，并且规定了插件必须实现的功能和接口;</li><li>第三方插件: <a href="https://github.com/projectcalico/calico" target="_blank" rel="noopener noreferrer">calico</a><a href="https://github.com/cilium/cilium" target="_blank" rel="noopener noreferrer">cilium</a></li></ol><h3 id="二、k8s和cni是什么关系" tabindex="-1"><a class="header-anchor" href="#二、k8s和cni是什么关系"><span>二、k8s和CNI是什么关系</span></a></h3><ul><li>Kubernetes遵循CNI（Container Networking Interface）规范；</li><li>使用CNI插件来实现容器间通信和与外部网络通信，定义和管理容器的网络配置；</li><li>Kubernetes提供了一些默认的CNI网络插件，例如Flannel和Calico等；</li><li>CNI网络抽象层</li></ul><h3 id="三、k8s如何集成flannel" tabindex="-1"><a class="header-anchor" href="#三、k8s如何集成flannel"><span>三、k8s如何集成flannel</span></a></h3><ul><li>Kubernetes文档<a href="https://kubernetes.io/zh-cn/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/" target="_blank" rel="noopener noreferrer">使用kubeadm引导集群</a>;</li><li>Kubernetes文档<a href="https://kubernetes.io/zh-cn/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/#pod-network" target="_blank" rel="noopener noreferrer">安装Pod网络附加组件</a></li><li>Kubernetes文档<a href="https://kubernetes.io/zh-cn/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/" target="_blank" rel="noopener noreferrer">概念/扩展/计算存储和网络扩展/网络插件</a>选择使用containerd\\CRI-O</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 在控制平面节点或具有 kubeconfig 凭据的节点上安装 Pod 网络附加组件</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 每个集群只能安装一个 Pod 网络</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> kubectl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apply</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">add-on.yam</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">l&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="四、cni标准和cni提供的二进制程序-什么关系" tabindex="-1"><a class="header-anchor" href="#四、cni标准和cni提供的二进制程序-什么关系"><span>四、CNI标准和CNI提供的二进制程序(什么关系)</span></a></h3><blockquote><p>CNI插件是符合CNI规范的二进制程序</p></blockquote><h3 id="五、只有-cni-plugins-可以安装好k8s的网络吗" tabindex="-1"><a class="header-anchor" href="#五、只有-cni-plugins-可以安装好k8s的网络吗"><span>五、只有 <a href="https://github.com/containernetworking/plugins" target="_blank" rel="noopener noreferrer">CNI/plugins</a> 可以安装好k8s的网络吗</span></a></h3><p>不是的，除了 https://github.com/containernetworking/plugins 还有很多其他的网络插件可以用于Kubernetes，比如：Calico、Flannel、Weave Net、Cilium等等。可以根据自己的需求选择适合的网络插件来部署Kubernetes集群。</p><h3 id="六、cni如何工作的" tabindex="-1"><a class="header-anchor" href="#六、cni如何工作的"><span>六、CNI如何工作的</span></a></h3><p>参考<a href="https://mp.weixin.qq.com/s/gWPZKz9Z4gCoZRFX8dvr6w" target="_blank" rel="noopener noreferrer">万字总结体系化带你全面认识容器网络接口(CNI)</a></p><p>CNI的接口并不是指HTTP，gRPC接口，CNI接口是指对可执行程序的调用（exec）。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ls</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /opt/cni/bin/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bandwidth</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  bridge</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  dhcp</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  firewall</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  flannel</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  host-device</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  host-local</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  ipvlan</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">loopback</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  macvlan</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  portmap</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  ptp</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  sbr</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  static</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  tuning</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  vlan</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/images/cni-pod.png" alt="容器运行时执行CNI插件 - 调用二进制脚本方式" tabindex="0" loading="lazy"><figcaption>容器运行时执行CNI插件 - 调用二进制脚本方式</figcaption></figure><blockquote><p>libcni（胶水层）是CNI提供的一个go package，封装了一些符合CNI规范的标准操作，便于容器运行时和网络插件对接。</p></blockquote><ol><li>JSON格式的配置文件来描述网络配置;</li><li>容器运行时负责执行CNI插件，并通过CNI插件的标准输入（stdin）来传递配置文件信息，通过标准输出（stdout）接收插件的执行结果;</li><li>环境变量: CNI_COMMAND：定义期望的操作，可以是ADD，DEL，CHECK或VERSION。 CNI_CONTAINERID：容器ID，由容器运行时管理的容器唯一标识符。 CNI_NETNS：容器网络命名空间的路径。（形如 /run/netns/[nsname]）。 CNI_IFNAME：需要被创建的网络接口名称，例如eth0。 CNI_ARGS：运行时调用时传入的额外参数，格式为分号分隔的key-value对，例如FOO=BAR;ABC=123 CNI_PATH：CNI插件可执行文件的路径，例如/opt/cni/bin。</li><li>通过链式调用的方式来支持多插件的组合使用;</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 调用bridge插件将容器接入到主机网桥</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># CNI_COMMAND=ADD 顾名思义表示创建。</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># XXX=XXX 其他参数定义见下文。</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># &lt; config.json 表示从标准输入传递配置文件</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CNI_COMMAND</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ADD</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> XXX</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">XXX</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> ./bridge</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">config.json</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="七、使用cni用于docker容器网络建设" tabindex="-1"><a class="header-anchor" href="#七、使用cni用于docker容器网络建设"><span>七、使用CNI用于Docker容器网络建设</span></a></h3><h5 id="_1-安装runc和cni-plugins" tabindex="-1"><a class="header-anchor" href="#_1-安装runc和cni-plugins"><span>1.安装runc和cni plugins</span></a></h5><ul><li>runc</li><li>docker</li><li>cni plugins</li><li>golang</li><li>git</li></ul><h5 id="_2-quickstart" tabindex="-1"><a class="header-anchor" href="#_2-quickstart"><span>2.quickStart</span></a></h5><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 宿主机上</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CNI_PATH=/opt/cni/bin</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /home</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clone</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://github.com/containernetworking/cni.git</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CNI_PATH=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$CNI_PATH</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /home/cni/scripts/priv-net-run.sh</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ifconfig</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-docker" tabindex="-1"><a class="header-anchor" href="#_3-docker"><span>3.docker</span></a></h5><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> save</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -o</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> busybox.tar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> busybox:latest</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> load</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> busybox.tar</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CNI_PATH=/opt/cni/bi</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> echo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $CNI_PATH</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /home/cni/scripts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CNI_PATH</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$CNI_PATH</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> ./docker-run.sh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --rm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> busybox:latest</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ifconfig</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="http://www.dasblinkenlichten.com/understanding-cni-container-networking-interface/" target="_blank" rel="noopener noreferrer">dasblinkenlichten.com/深入理解CNI</a></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /opt/cni/bin</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">mybridge.conf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EOF</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">{</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;cniVersion&quot;: &quot;0.2.0&quot;,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;name&quot;: &quot;mybridge&quot;,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;type&quot;: &quot;bridge&quot;,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;bridge&quot;: &quot;cni_bridge0&quot;,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;isGateway&quot;: true,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;ipMasq&quot;: true,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;ipam&quot;: {</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;type&quot;: &quot;host-local&quot;,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;subnet&quot;: &quot;10.15.20.0/24&quot;,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;routes&quot;: [</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            { &quot;dst&quot;: &quot;0.0.0.0/0&quot; },</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            { &quot;dst&quot;: &quot;1.1.1.1/32&quot;, &quot;gw&quot;:&quot;10.15.20.1&quot;}</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        ]</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    }</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> netns</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1234567890</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CNI_COMMAND=ADD</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CNI_CONTAINERID=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1234567890</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CNI_NETNS=/var/run/netns/1234567890</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CNI_IFNAME=eth12</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CNI_PATH=`</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">pwd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> ./bridge</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">mybridge.conf</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看我们的主机 iptables 规则，我们将看到伪装和接受规则.</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> iptables-save</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mybridge</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 通常情况下，容器运行时会创建netns，这里我们手动创建</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> netns</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1234567890</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ifconfig</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#　设备eth12的IP地址配置为10.15.20.2，子网掩码为255.255.255.0（/24表示子网掩码），并将该设备的网络范围设置为本地链接（scope link）</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> netns</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1234567890</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> route</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 命名空间有一个名为“eth12”的接口，IP 地址为 10.15.20.2/24</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># IP 地址对应的ipam的子网段地址</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">eth12:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> flags=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4163</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">UP,BROADCAST,RUNNING,MULTICAS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">T&gt;  </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">mtu</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1500</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        inet</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10.15.20.2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  netmask</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 255.255.255.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  broadcast</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10.15.20.255</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        inet6</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> fe80::44f2:48ff:feb6:b364</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  prefixlen</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 64</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  scopeid</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0x20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">lin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">k&gt;</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        ether</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 46:f2:48:b6:b3:64</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  txqueuelen</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  (Ethernet)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        RX</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> packets</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 67</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  bytes</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 13007</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (12.7 </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">KiB</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        RX</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> errors</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  dropped</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  overruns</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  frame</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        TX</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> packets</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 9</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  bytes</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 682</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (682.0 </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">B</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        TX</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> errors</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  dropped</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> overruns</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  carrier</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  collisions</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># netns内部的网络路由可以看到规则有</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># - 所有未知目标IP地址的网络流量都将通过eth12设备，并通过网关10.15.20.1转发到其他网络</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># - 将目标IP地址1.1.1.1的网络流量通过eth12设备，并通过网关10.15.20.1转发到其他网络</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># - 本地网络10.15.20.0/24的所有流量都通过eth12设备发送，并且源IP地址为10.15.20.2</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># &quot;proto kernel&quot;表示该路由是由内核自动生成的。 &quot;scope link&quot; 表示该路由只适用于本地链路</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> netns</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1234567890</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> route</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">default</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> via</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10.15.20.1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> eth12</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                                 #  &quot;dev&quot; 是指指定该路由器的出口网络接口，即数据包是从哪个网络接口发送出去的, 默认路由通过 eth12 网络接口，经过 10.15.20.1 这个下一跳地址进行转发</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1.1.1.1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> via</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10.15.20.1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> eth12</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                                 #  &quot;via&quot; 是指默认路由的下一跳地址，即数据包需要经过哪个路由器进行转发</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">10.15.20.0/24</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> eth12</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> proto</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> kernel</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> scope</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> link</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> src</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10.15.20.2</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   #  &quot;src&quot; 是指源IP地址，即指定该路由器发送数据包的源IP地址</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看网桥配置可以看到netns内部网卡eth12的veth pair对端网卡是vethb4336cfa</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> brctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> show</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bridge</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     bridge</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> id</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">               STP</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> enabled</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     interfaces</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cni_bridge0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     8000.127bceaee96d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       no</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">              vethb4336cfa</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-配置解析" tabindex="-1"><a class="header-anchor" href="#_4-配置解析"><span>4.配置解析</span></a></h5><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;cniVersion&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;定义适用的 CNI 规范的版本&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;网络名称&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;type&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;您希望使用的插件的名称。在这种情况下，插件可执行文件的实际名称&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;bridge&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;创建名为cni_bridge0的网桥接口&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;isGateway&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;如果为真，则为网桥分配一个IP地址，以便连接到它的容器可以将其用作网关&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;ipMasq&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;为此网络配置出站伪装（源 NAT）&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;ipam&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        &quot;type&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;IPAM 插件可执行文件的名称&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        &quot;subnet&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;要分配的子网（这实际上是 IPAM 插件的一部分），这个其实决定了容器内的网址&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        &quot;routes&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">&quot;dst&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;您希望访问的子网&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> },</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">&quot;dst&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;您希望访问的子网&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">&quot;gw&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;到达dst的下一跳IP地址。如果未指定，则假定为子网的默认网关&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        ]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CNI_COMMAND</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ADD</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> –</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 我们告诉</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CNI</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 我们想要添加一个连接</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CNI_CONTAINER</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">1234567890</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> –</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 我们告诉</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CNI</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 我们想要使用的网络命名空间称为“1234567890”（更多内容见下文）</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CNI_NETNS</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/var/run/netns/1234567890</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> –</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 相关命名空间的路径</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CNI_IFNAME</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">eth12</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> –</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 我们希望在连接的容器端使用的接口名称</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CNI_PATH</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">`</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">pwd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  –</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 我们总是需要告诉</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CNI</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 插件可执行文件所在的位置。在这种情况下，</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">因为我们已经在“cni”目录中，所以我们只有变量引用</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pwd（当前工作目录）。</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">您需要命令</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pwd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 周围的刻度线才能正确评估。此处的格式似乎正在删除它们，但它们在上面的命令中正确</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">我们使用</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> STDIN</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 将网络配置文件提供给插件</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_5-cni扩展插件" tabindex="-1"><a class="header-anchor" href="#_5-cni扩展插件"><span>5.CNI扩展插件</span></a></h5><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tree</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /opt/cni/bin/</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/opt/cni/bin/</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bandwidth</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">       # 提供带宽限制功能，用于限制容器的网络带宽使用</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bridge</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">          # 用于创建和管理 Linux 桥接网络，使容器可以与宿主机以及其他容器进行通信</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dhcp</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            # 用于在容器启动时为其分配 IP 地址和其他网络配置信息，使容器能够与网络相连并进行通信</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dummy</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">           # 创建虚拟网络接口，用于将本地流量重定向到远程主机或者其它容器，以便进行容器之间的通信</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> firewall</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 用于在容器之间设置网络防火墙规则，保护容器免受网络攻击或恶意流量的侵害</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> host-device</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     # 用于将宿主机的物理网络设备（例如网卡）直接绑定到容器中，以提高网络性能和可靠性</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> host-local</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # 用于容器内部的通信，提供方便的主机名解析和网络配置</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ipvlan</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">          # 使用现有接口创建虚拟接口，以增加容器的网络隔离性</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> loopback</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 提供一个本地环回接口，用于本地进程与网络的通信</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> macvlan</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">         # 将容器连接到物理网络，使其可以使用独立的MAC地址和IP地址</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> portmap</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">         # 提供端口映射功能，将容器内部的端口映射到宿主机的端口上</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ptp</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">             # 提供时间同步功能，确保容器中的网络设备具有相同的时间戳</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sbr</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">             # 提供基于软件的路由功能，用于将容器连接到不同的网络</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> static</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">          # 提供静态IP地址配置功能，用于固定给容器分配IP地址</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tuning</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">          # 提供网络优化功能，用于调整容器网络性能的参数</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> vlan</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            # 提供虚拟局域网功能，用于将容器分组成不同的虚拟网络</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">└──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> vrf</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">             # 提供虚拟路由功能，用于将容器连接到不同的路由域</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="q-a" tabindex="-1"><a class="header-anchor" href="#q-a"><span>Q&amp;A</span></a></h3><h5 id="_1-k8s使用ovs通信的时候-当pod与pod之间通信-数据流向怎么样的" tabindex="-1"><a class="header-anchor" href="#_1-k8s使用ovs通信的时候-当pod与pod之间通信-数据流向怎么样的"><span>1.k8s使用ovs通信的时候，当pod与pod之间通信，数据流向怎么样的</span></a></h5><blockquote><p>OVS充当着虚拟交换机的角色，Kubernetes网络模型插件协调多个节点上不同的OVS实现容器之间通信。</p></blockquote><ul><li>1.应用程序在一个pod中生成数据包，数据包被发送到pod的网络接口;</li><li>2.Kubernetes网络模型插件（例如：Flannel等）将数据包封装在一个Overlay协议中;</li><li>3.CNI插件比如flannel将数据包发送到虚拟交换机（OVS）;</li><li>4.OVS使用VXLAN或者Geneve等封装技术，将数据包发送到另一个pod的OVS;</li><li>5.另一个pod的OVS解开数据包，将数据包发送到目标pod的网络接口;</li><li>6.应用程序在目标pod中接收到数据包。</li></ul><h5 id="_2-单价的kubernetes如何运行非控制平面的pod" tabindex="-1"><a class="header-anchor" href="#_2-单价的kubernetes如何运行非控制平面的pod"><span>2.单价的kubernetes如何运行非控制平面的pod</span></a></h5><p>默认情况下，出于安全原因，你的集群不会在控制平面节点上调度 Pod。 参考官方手册<a href="https://kubernetes.io/zh-cn/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/" target="_blank" rel="noopener noreferrer">控制平面节点隔离</a>，如果你希望能够在控制平面节点上调度 Pod，例如单机 Kubernetes 集群：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> kubectl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> taint</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nodes</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --all</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> node-role.kubernetes.io/control-plane-</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h5 id="_3-kubelet管理cni插件吗" tabindex="-1"><a class="header-anchor" href="#_3-kubelet管理cni插件吗"><span>3.kubelet管理CNI插件吗</span></a></h5><ul><li>Kubernetes 1.24 之前，CNI 插件也可以由 kubelet 使用命令行参数 cni-bin-dir 和 network-plugin 管理;</li><li>Kubernetes 1.24 移除了这些命令行参数， CNI 的管理不再是 kubelet 的工作;</li></ul><h5 id="_4-如何安装和管理cni插件" tabindex="-1"><a class="header-anchor" href="#_4-如何安装和管理cni插件"><span>4.如何安装和管理CNI插件</span></a></h5><p>理解<a href="https://kubernetes.io/zh-cn/docs/concepts/cluster-administration/networking/#how-to-implement-the-kubernetes-networking-model" target="_blank" rel="noopener noreferrer">网络模型</a> - 如何实现网络模型 - <a href="https://kubernetes.io/zh-cn/docs/concepts/cluster-administration/addons/#networking-and-network-policy" target="_blank" rel="noopener noreferrer">安装扩展</a> - <a href="https://github.com/flannel-io/flannel#deploying-flannel-manually" target="_blank" rel="noopener noreferrer">使用helm or kubectl 安装 flannel</a></p><h5 id="_5-cni插件和flannel什么关系" tabindex="-1"><a class="header-anchor" href="#_5-cni插件和flannel什么关系"><span>5.CNI插件和flannel什么关系</span></a></h5><ul><li>cni插件和flannel都是用于容器网络的技术。</li><li>cni插件用于管理容器网络，flannel则是一种网络解决方案，可以提供容器间的通信。</li><li>cni插件可以与flannel结合使用，以管理flannel提供的网络。在使用kubernetes等容器编排工具时，通常都会使用cni插件和flannel进行容器网络的管理。</li></ul><h5 id="_6-kube-proxy和flannel是什么关系" tabindex="-1"><a class="header-anchor" href="#_6-kube-proxy和flannel是什么关系"><span>6.kube-proxy和flannel是什么关系</span></a></h5><p>kube-proxy和flannel可以说是两个不同的组件，但它们是紧密相关的。 kube-proxy作为Kubernetes中的一种网络代理，负责管理集群内部的网络连接。 flannel则是一种网络解决方案，用于管理容器之间的通信。 在一个Kubernetes集群中，flannel会被作为网络解决方案被部署，并使用kube-proxy来实现网络代理的功能。 flannel和cni也有关系。cni是Container Network Interface的缩写，是用于实现容器网络的通用API规范。 而flannel则是cni规范的一个实现。也就是说，在一个Kubernetes集群中，flannel可以被作为cni规范的一个实现来使用，以实现容器网络的功能。</p><h5 id="_7-kube-proxy是每个节点都有吗-控制节点还是工作节点-独立进程还是pod内还是二进制程序而已" tabindex="-1"><a class="header-anchor" href="#_7-kube-proxy是每个节点都有吗-控制节点还是工作节点-独立进程还是pod内还是二进制程序而已"><span>7.kube-proxy是每个节点都有吗，控制节点还是工作节点，独立进程还是pod内还是二进制程序而已</span></a></h5><p>kube-proxy是每个工作节点都有的，它作为一个独立的进程运行在每个节点上。 它的主要作用是实现Kubernetes服务发现和负载均衡机制，为Service对象提供集群内服务的访问入口。 kube-proxy会在节点上创建iptables规则或操作网络设备，以实现Service IP的转发和负载均衡。</p><h5 id="_8-flannel是cni的实现吗" tabindex="-1"><a class="header-anchor" href="#_8-flannel是cni的实现吗"><span>8.flannel是CNI的实现吗</span></a></h5><p>flannel是一种CNI（Container Networking Interface）的实现，用于容器之间的网络通信。 它使用覆盖网络的技术来实现容器之间的通信，支持多种网络模型，如host-gw、vxlan、ipip等，可以在不同节点之间建立虚拟网络。 flannel的主要作用是为容器提供独立的IP地址，并实现跨节点的通信，让容器能够像在一个本地网络中一样相互通信。</p><h5 id="_9-cni仓库之中有cni规范库-cni插件是什么关系-cni插件-bridge-firewall-ptb等-和flannel是什么关系" tabindex="-1"><a class="header-anchor" href="#_9-cni仓库之中有cni规范库-cni插件是什么关系-cni插件-bridge-firewall-ptb等-和flannel是什么关系"><span>9.CNI仓库之中有CNI规范库\\CNI插件是什么关系，CNI插件(bridge\\firewall\\ptb等)和flannel是什么关系</span></a></h5><ul><li>CNI规范是一种容器网络接口规范，定义了容器运行时与网络插件之间的接口规范;</li><li>CNI插件(轻量级网络插件)是遵循CNI规范定义的一种网络插件，用于在容器中创建和管理网络接口;</li><li>Flannel是一个常用的CNI插件之一，用于创建虚拟网络，并为容器提供IP地址，管理集群网络和跨节点通信;</li><li>在使用Flannel时，可以选择使用CNI插件作为网络接口与容器运行时交互，以实现跨主机容器的网络通信；</li></ul><blockquote><p>CNI插件和Flannel是互补的关系</p></blockquote><h5 id="_10-kube-proxy原理是什么" tabindex="-1"><a class="header-anchor" href="#_10-kube-proxy原理是什么"><span>10.kube-proxy原理是什么</span></a></h5><p><a href="https://kubernetes.io/zh-cn/docs/reference/command-line-tools-reference/kube-proxy/" target="_blank" rel="noopener noreferrer">k8s/参考/组件工具/kube-proxy</a></p><ul><li>网络代理在每个节点上运行；</li><li>执行 TCP、UDP 和 SCTP 流转发；</li><li>转发是基于iptables的（用iptables规则来实现Kubernetes Service的负载均衡和端口转发功能），每个Service创建一条iptables规则；</li></ul><h4 id="_11-演示如何使用cni插件来为docker容器设置网络" tabindex="-1"><a class="header-anchor" href="#_11-演示如何使用cni插件来为docker容器设置网络"><span>11.演示如何使用CNI插件来为Docker容器设置网络</span></a></h4><ul><li>docker指定网络<code>--net=none</code>的容器，容器内只有网卡lo无法通信；</li><li>调用CNI插件，为容器设置eth0接口，为其分配IP地址，并接入主机网桥mynet0；</li></ul><ol><li>容器中新增eth0网络接口：使用Bridge插件为容器创建网络接口，并连接到主机网桥(bridge.json)；</li><li>为容器所在的网段添加路由: <code>ip route add 10.10.0.0/16 dev mynet0 src 10.10.0.1 </code>;</li><li>访问容器内</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -I</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10.10.0.2</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # IP换成实际分配给容器的IP地址</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">HTTP/1.1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 200</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> OK</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_12-如何方便快捷查看网卡" tabindex="-1"><a class="header-anchor" href="#_12-如何方便快捷查看网卡"><span>12.如何方便快捷查看网卡</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nsenter</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $pid</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> a</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_13-删除网桥" tabindex="-1"><a class="header-anchor" href="#_13-删除网桥"><span>13.删除网桥</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> link</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> delete</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mynet0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> type</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bridge</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_14-路由规则default-via-10-15-20-1-dev-eth12是什么意思" tabindex="-1"><a class="header-anchor" href="#_14-路由规则default-via-10-15-20-1-dev-eth12是什么意思"><span>14.路由规则default via 10.15.20.1 dev eth12是什么意思</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">default</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">              # 默认路由，如果未知的ip（ip route无匹配规则）则流量从这个规则走</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">via</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10.15.20.1</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">       # 下一跳地址，即数据包需要经过哪个路由器进行转发</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> eth12</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            # 出口网络接口，即数据包是从哪个网络接口发送出去的</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_15-10-16-200-0-21-的-ip-范围是如何计算的呢" tabindex="-1"><a class="header-anchor" href="#_15-10-16-200-0-21-的-ip-范围是如何计算的呢"><span>15.10.16.200.0/21 的 IP 范围是如何计算的呢</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">转32位二进制:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 00001010</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 00010000</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 11001000</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 00000000</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">因为是21位，所以前面21位不能更改，剩下的后面的二进制</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">转十进制最小的是</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">00001010</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 00010000</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 11001000</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 00000000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  也就是</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10.16.200.0</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">转十进制最大的是</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">00001010</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 00010000</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 11001111</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 11111111</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  也就是</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10.16.207.255</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">所以</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> IP</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 范围是</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10.16.200.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ～</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10.16.207.255</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="相关资料" tabindex="-1"><a class="header-anchor" href="#相关资料"><span>相关资料</span></a></h3><p><a href="https://github.com/containernetworking/cni" target="_blank" rel="noopener noreferrer">官方手册 https://github.com/containernetworking/cni</a><a href="https://github.com/containernetworking/plugins" target="_blank" rel="noopener noreferrer">官方手册 CNI/plugins &amp;&amp; https://github.com/containernetworking/plugins</a><a href="https://kubernetes.io/zh-cn/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/" target="_blank" rel="noopener noreferrer">k8s/概念/扩展/网络插件</a><a href="https://github.com/containerd/containerd/blob/main/script/setup/install-cni" target="_blank" rel="noopener noreferrer">k8s/概念/扩展/网络插件/containerd安装网络插件</a><a href="https://github.com/cri-o/cri-o/blob/main/contrib/cni/README.md" target="_blank" rel="noopener noreferrer">k8s/概念/扩展/网络插件/CRI-O安装网络插件</a><a href="https://kubernetes.io/zh-cn/docs/concepts/cluster-administration/networking/#how-to-implement-the-kubernetes-networking-model" target="_blank" rel="noopener noreferrer">k8s/概念/集群管理/集群网络系统/网络模型 &amp;&amp; 如何实现网络模型</a><a href="https://kubernetes.io/zh-cn/docs/concepts/cluster-administration/addons/#networking-and-network-policy" target="_blank" rel="noopener noreferrer">k8s/概念/集群管理/安装扩展</a><a href="https://mp.weixin.qq.com/s/gWPZKz9Z4gCoZRFX8dvr6w" target="_blank" rel="noopener noreferrer">万字总结，体系化带你全面认识容器网络接口(CNI)</a><a href="https://juejin.cn/post/6884881812145995790" target="_blank" rel="noopener noreferrer">深入K8S组网架构和Flannel原理</a><a href="https://github.com/cilium" target="_blank" rel="noopener noreferrer">https://github.com/cilium</a><a href="https://cilium.io/" target="_blank" rel="noopener noreferrer">https://cilium.io/</a><a href="https://docs.cilium.io/en/stable/" target="_blank" rel="noopener noreferrer">https://docs.cilium.io/en/stable/</a><a href="https://hub.docker.com/r/cilium/cilium" target="_blank" rel="noopener noreferrer">https://hub.docker.com/r/cilium/cilium</a><a href="https://zhuanlan.zhihu.com/p/471220158" target="_blank" rel="noopener noreferrer">使用 Cilium 作为网络插件部署 K8s + KubeSphere</a><a href="https://zhuanlan.zhihu.com/p/135298580" target="_blank" rel="noopener noreferrer">在K8s集群上部署Istio的三种方式</a><a href="https://www.runoob.com/linux/linux-comm-ip.html" target="_blank" rel="noopener noreferrer">Linux ip 命令</a><a href="https://atbug.com" target="_blank" rel="noopener noreferrer">宝藏博主</a><a href="https://nxw.name/2022/linux-network-stack" target="_blank" rel="noopener noreferrer">内核网络协议栈</a></p>',76)]))}]]),t=JSON.parse('{"path":"/posts/cni/%E4%BB%80%E4%B9%88%E6%98%AFCNI.html","title":"什么是CNI","lang":"zh-CN","frontmatter":{"title":"什么是CNI","tags":["docker"],"categories":["docker"],"description":"理解什么是CNI，k8s的网络模型是什么，实现的插件有哪些，相关的openvswitch又是什么 一、简短描述 CNCF项目; 标准化的网络接口规范; CNI规范定义了\\"容器运行时\\"如何与\\"网络插件\\"进行通信，并且规定了插件必须实现的功能和接口; 第三方插件: calico cilium 二、k8s和CNI是什么关系 Kubernetes遵循CNI（C...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://weiqiangxu.github.io/posts/cni/%E4%BB%80%E4%B9%88%E6%98%AFCNI.html"}],["meta",{"property":"og:site_name","content":"QuickStart程序员"}],["meta",{"property":"og:title","content":"什么是CNI"}],["meta",{"property":"og:description","content":"理解什么是CNI，k8s的网络模型是什么，实现的插件有哪些，相关的openvswitch又是什么 一、简短描述 CNCF项目; 标准化的网络接口规范; CNI规范定义了\\"容器运行时\\"如何与\\"网络插件\\"进行通信，并且规定了插件必须实现的功能和接口; 第三方插件: calico cilium 二、k8s和CNI是什么关系 Kubernetes遵循CNI（C..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://weiqiangxu.github.io/images/cni-pod.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"docker"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"什么是CNI\\",\\"image\\":[\\"https://weiqiangxu.github.io/images/cni-pod.png\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuweiqiang\\",\\"url\\":\\"https://weiqiangxu.github.io\\"}]}"]]},"headers":[{"level":3,"title":"一、简短描述","slug":"一、简短描述","link":"#一、简短描述","children":[]},{"level":3,"title":"二、k8s和CNI是什么关系","slug":"二、k8s和cni是什么关系","link":"#二、k8s和cni是什么关系","children":[]},{"level":3,"title":"三、k8s如何集成flannel","slug":"三、k8s如何集成flannel","link":"#三、k8s如何集成flannel","children":[]},{"level":3,"title":"四、CNI标准和CNI提供的二进制程序(什么关系)","slug":"四、cni标准和cni提供的二进制程序-什么关系","link":"#四、cni标准和cni提供的二进制程序-什么关系","children":[]},{"level":3,"title":"五、只有 CNI/plugins 可以安装好k8s的网络吗","slug":"五、只有-cni-plugins-可以安装好k8s的网络吗","link":"#五、只有-cni-plugins-可以安装好k8s的网络吗","children":[]},{"level":3,"title":"六、CNI如何工作的","slug":"六、cni如何工作的","link":"#六、cni如何工作的","children":[]},{"level":3,"title":"七、使用CNI用于Docker容器网络建设","slug":"七、使用cni用于docker容器网络建设","link":"#七、使用cni用于docker容器网络建设","children":[]},{"level":3,"title":"Q&A","slug":"q-a","link":"#q-a","children":[]},{"level":3,"title":"相关资料","slug":"相关资料","link":"#相关资料","children":[]}],"readingTime":{"minutes":14.15,"words":4245},"filePathRelative":"posts/cni/什么是CNI.md","excerpt":"<blockquote>\\n<p>理解什么是CNI，k8s的网络模型是什么，实现的插件有哪些，相关的openvswitch又是什么</p>\\n</blockquote>\\n<h3>一、简短描述</h3>\\n<ol>\\n<li>CNCF项目;</li>\\n<li>标准化的网络接口规范;</li>\\n<li>CNI规范定义了\\"容器运行时\\"如何与\\"网络插件\\"进行通信，并且规定了插件必须实现的功能和接口;</li>\\n<li>第三方插件:\\n<a href=\\"https://github.com/projectcalico/calico\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">calico</a>\\n<a href=\\"https://github.com/cilium/cilium\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">cilium</a></li>\\n</ol>","autoDesc":true}')}}]);